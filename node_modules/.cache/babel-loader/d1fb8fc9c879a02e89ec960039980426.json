{"ast":null,"code":"'use strict';\n\nconst Team = require('./Team');\n\nconst Application = require('./interfaces/Application');\n\nconst ApplicationCommandManager = require('../managers/ApplicationCommandManager');\n\nconst ApplicationFlags = require('../util/ApplicationFlags');\n/**\n * Represents a Client OAuth2 Application.\n * @extends {Application}\n */\n\n\nclass ClientApplication extends Application {\n  constructor(client, data) {\n    super(client, data);\n    /**\n     * The application command manager for this application\n     * @type {ApplicationCommandManager}\n     */\n\n    this.commands = new ApplicationCommandManager(this.client);\n  }\n\n  _patch(data) {\n    super._patch(data);\n    /**\n     * The flags this application has\n     * @type {ApplicationFlags}\n     */\n\n\n    this.flags = 'flags' in data ? new ApplicationFlags(data.flags).freeze() : this.flags;\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n\n    this.cover = data.cover_image ?? this.cover ?? null;\n    /**\n     * The application's RPC origins, if enabled\n     * @type {string[]}\n     */\n\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n    /**\n     * If this application's bot requires a code grant when using the OAuth2 flow\n     * @type {?boolean}\n     */\n\n    this.botRequireCodeGrant = data.bot_require_code_grant ?? this.botRequireCodeGrant ?? null;\n    /**\n     * If this application's bot is public\n     * @type {?boolean}\n     */\n\n    this.botPublic = data.bot_public ?? this.botPublic ?? null;\n    /**\n     * The owner of this OAuth application\n     * @type {?(User|Team)}\n     */\n\n    this.owner = data.team ? new Team(this.client, data.team) : data.owner ? this.client.users._add(data.owner) : this.owner ?? null;\n  }\n  /**\n   * Whether this application is partial\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get partial() {\n    return !this.name;\n  }\n  /**\n   * Obtains this application from Discord.\n   * @returns {Promise<ClientApplication>}\n   */\n\n\n  async fetch() {\n    const app = await this.client.api.oauth2.applications('@me').get();\n\n    this._patch(app);\n\n    return this;\n  }\n\n}\n\nmodule.exports = ClientApplication;","map":{"version":3,"names":["Team","require","Application","ApplicationCommandManager","ApplicationFlags","ClientApplication","constructor","client","data","commands","_patch","flags","freeze","cover","cover_image","rpcOrigins","rpc_origins","botRequireCodeGrant","bot_require_code_grant","botPublic","bot_public","owner","team","users","_add","partial","name","fetch","app","api","oauth2","applications","get","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/ClientApplication.js"],"sourcesContent":["'use strict';\n\nconst Team = require('./Team');\nconst Application = require('./interfaces/Application');\nconst ApplicationCommandManager = require('../managers/ApplicationCommandManager');\nconst ApplicationFlags = require('../util/ApplicationFlags');\n\n/**\n * Represents a Client OAuth2 Application.\n * @extends {Application}\n */\nclass ClientApplication extends Application {\n  constructor(client, data) {\n    super(client, data);\n\n    /**\n     * The application command manager for this application\n     * @type {ApplicationCommandManager}\n     */\n    this.commands = new ApplicationCommandManager(this.client);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    /**\n     * The flags this application has\n     * @type {ApplicationFlags}\n     */\n    this.flags = 'flags' in data ? new ApplicationFlags(data.flags).freeze() : this.flags;\n\n    /**\n     * The hash of the application's cover image\n     * @type {?string}\n     */\n    this.cover = data.cover_image ?? this.cover ?? null;\n\n    /**\n     * The application's RPC origins, if enabled\n     * @type {string[]}\n     */\n    this.rpcOrigins = data.rpc_origins ?? this.rpcOrigins ?? [];\n\n    /**\n     * If this application's bot requires a code grant when using the OAuth2 flow\n     * @type {?boolean}\n     */\n    this.botRequireCodeGrant = data.bot_require_code_grant ?? this.botRequireCodeGrant ?? null;\n\n    /**\n     * If this application's bot is public\n     * @type {?boolean}\n     */\n    this.botPublic = data.bot_public ?? this.botPublic ?? null;\n\n    /**\n     * The owner of this OAuth application\n     * @type {?(User|Team)}\n     */\n    this.owner = data.team\n      ? new Team(this.client, data.team)\n      : data.owner\n      ? this.client.users._add(data.owner)\n      : this.owner ?? null;\n  }\n\n  /**\n   * Whether this application is partial\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !this.name;\n  }\n\n  /**\n   * Obtains this application from Discord.\n   * @returns {Promise<ClientApplication>}\n   */\n  async fetch() {\n    const app = await this.client.api.oauth2.applications('@me').get();\n    this._patch(app);\n    return this;\n  }\n}\n\nmodule.exports = ClientApplication;\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAME,yBAAyB,GAAGF,OAAO,CAAC,uCAAD,CAAzC;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAAD,CAAhC;AAEA;AACA;AACA;AACA;;;AACA,MAAMI,iBAAN,SAAgCH,WAAhC,CAA4C;EAC1CI,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;IACxB,MAAMD,MAAN,EAAcC,IAAd;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgB,IAAIN,yBAAJ,CAA8B,KAAKI,MAAnC,CAAhB;EACD;;EAEDG,MAAM,CAACF,IAAD,EAAO;IACX,MAAME,MAAN,CAAaF,IAAb;IAEA;AACJ;AACA;AACA;;;IACI,KAAKG,KAAL,GAAa,WAAWH,IAAX,GAAkB,IAAIJ,gBAAJ,CAAqBI,IAAI,CAACG,KAA1B,EAAiCC,MAAjC,EAAlB,GAA8D,KAAKD,KAAhF;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,KAAL,GAAaL,IAAI,CAACM,WAAL,IAAoB,KAAKD,KAAzB,IAAkC,IAA/C;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,UAAL,GAAkBP,IAAI,CAACQ,WAAL,IAAoB,KAAKD,UAAzB,IAAuC,EAAzD;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,mBAAL,GAA2BT,IAAI,CAACU,sBAAL,IAA+B,KAAKD,mBAApC,IAA2D,IAAtF;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,SAAL,GAAiBX,IAAI,CAACY,UAAL,IAAmB,KAAKD,SAAxB,IAAqC,IAAtD;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,KAAL,GAAab,IAAI,CAACc,IAAL,GACT,IAAItB,IAAJ,CAAS,KAAKO,MAAd,EAAsBC,IAAI,CAACc,IAA3B,CADS,GAETd,IAAI,CAACa,KAAL,GACA,KAAKd,MAAL,CAAYgB,KAAZ,CAAkBC,IAAlB,CAAuBhB,IAAI,CAACa,KAA5B,CADA,GAEA,KAAKA,KAAL,IAAc,IAJlB;EAKD;EAED;AACF;AACA;AACA;AACA;;;EACa,IAAPI,OAAO,GAAG;IACZ,OAAO,CAAC,KAAKC,IAAb;EACD;EAED;AACF;AACA;AACA;;;EACa,MAALC,KAAK,GAAG;IACZ,MAAMC,GAAG,GAAG,MAAM,KAAKrB,MAAL,CAAYsB,GAAZ,CAAgBC,MAAhB,CAAuBC,YAAvB,CAAoC,KAApC,EAA2CC,GAA3C,EAAlB;;IACA,KAAKtB,MAAL,CAAYkB,GAAZ;;IACA,OAAO,IAAP;EACD;;AAxEyC;;AA2E5CK,MAAM,CAACC,OAAP,GAAiB7B,iBAAjB"},"metadata":{},"sourceType":"script"}