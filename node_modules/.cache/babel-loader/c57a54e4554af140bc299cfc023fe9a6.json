{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events,\n  Status\n} = require('../../util/Constants');\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n\n    if (guild) {\n      member = this.getMember({\n        user: data.user\n      }, guild);\n      guild.memberCount--;\n\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n\n    return {\n      guild,\n      member\n    };\n  }\n\n}\n\nmodule.exports = GuildMemberRemoveAction;","map":{"version":3,"names":["Action","require","Events","Status","GuildMemberRemoveAction","handle","data","shard","client","guild","guilds","cache","get","guild_id","member","getMember","user","memberCount","deleted","members","delete","id","status","READY","emit","GUILD_MEMBER_REMOVE","voiceStates","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/GuildMemberRemove.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events, Status } = require('../../util/Constants');\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({ user: data.user }, guild);\n      guild.memberCount--;\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return { guild, member };\n  }\n}\n\nmodule.exports = GuildMemberRemoveAction;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;EAAEC,MAAF;EAAUC;AAAV,IAAqBF,OAAO,CAAC,sBAAD,CAAlC;;AAEA,MAAMG,uBAAN,SAAsCJ,MAAtC,CAA6C;EAC3CK,MAAM,CAACC,IAAD,EAAOC,KAAP,EAAc;IAClB,MAAMC,MAAM,GAAG,KAAKA,MAApB;IACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwBN,IAAI,CAACO,QAA7B,CAAd;IACA,IAAIC,MAAM,GAAG,IAAb;;IACA,IAAIL,KAAJ,EAAW;MACTK,MAAM,GAAG,KAAKC,SAAL,CAAe;QAAEC,IAAI,EAAEV,IAAI,CAACU;MAAb,CAAf,EAAoCP,KAApC,CAAT;MACAA,KAAK,CAACQ,WAAN;;MACA,IAAIH,MAAJ,EAAY;QACVA,MAAM,CAACI,OAAP,GAAiB,IAAjB;QACAT,KAAK,CAACU,OAAN,CAAcR,KAAd,CAAoBS,MAApB,CAA2BN,MAAM,CAACO,EAAlC;QACA;AACR;AACA;AACA;AACA;;QACQ,IAAId,KAAK,CAACe,MAAN,KAAiBnB,MAAM,CAACoB,KAA5B,EAAmCf,MAAM,CAACgB,IAAP,CAAYtB,MAAM,CAACuB,mBAAnB,EAAwCX,MAAxC;MACpC;;MACDL,KAAK,CAACiB,WAAN,CAAkBf,KAAlB,CAAwBS,MAAxB,CAA+Bd,IAAI,CAACU,IAAL,CAAUK,EAAzC;IACD;;IACD,OAAO;MAAEZ,KAAF;MAASK;IAAT,CAAP;EACD;;AArB0C;;AAwB7Ca,MAAM,CAACC,OAAP,GAAiBxB,uBAAjB"},"metadata":{},"sourceType":"script"}