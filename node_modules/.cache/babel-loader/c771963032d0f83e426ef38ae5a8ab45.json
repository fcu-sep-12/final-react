{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeakMapPredicate = void 0;\n\nconst has_items_1 = require(\"../utils/has-items\");\n\nconst predicate_1 = require(\"./predicate\");\n\nclass WeakMapPredicate extends predicate_1.Predicate {\n  /**\n  @hidden\n  */\n  constructor(options) {\n    super('WeakMap', options);\n  }\n  /**\n  Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n   @param keys - The keys that should be a key in the WeakMap.\n  */\n\n\n  hasKeys() {\n    for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n      keys[_key] = arguments[_key];\n    }\n\n    return this.addValidator({\n      message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n      validator: map => has_items_1.default(map, keys)\n    });\n  }\n  /**\n  Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n   @param keys - The keys that could be a key in the WeakMap.\n  */\n\n\n  hasAnyKeys() {\n    for (var _len2 = arguments.length, keys = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      keys[_key2] = arguments[_key2];\n    }\n\n    return this.addValidator({\n      message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n      validator: map => keys.some(key => map.has(key))\n    });\n  }\n\n}\n\nexports.WeakMapPredicate = WeakMapPredicate;","map":{"version":3,"names":["Object","defineProperty","exports","value","WeakMapPredicate","has_items_1","require","predicate_1","Predicate","constructor","options","hasKeys","keys","addValidator","message","_","label","missingKeys","JSON","stringify","validator","map","default","hasAnyKeys","some","key","has"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/predicates/weak-map.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakMapPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakMapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakMap', options);\n    }\n    /**\n    Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the WeakMap.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the WeakMap.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n}\nexports.WeakMapPredicate = WeakMapPredicate;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMF,gBAAN,SAA+BG,WAAW,CAACC,SAA3C,CAAqD;EACjD;AACJ;AACA;EACIC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAM,SAAN,EAAiBA,OAAjB;EACH;EACD;AACJ;AACA;AACA;;;EAEIC,OAAO,GAAU;IAAA,kCAANC,IAAM;MAANA,IAAM;IAAA;;IACb,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACC,CAAD,EAAIC,KAAJ,EAAWC,WAAX,KAA4B,YAAWD,KAAM,mBAAkBE,IAAI,CAACC,SAAL,CAAeF,WAAf,CAA4B,IAD/E;MAErBG,SAAS,EAAEC,GAAG,IAAIhB,WAAW,CAACiB,OAAZ,CAAoBD,GAApB,EAAyBT,IAAzB;IAFG,CAAlB,CAAP;EAIH;EACD;AACJ;AACA;AACA;;;EAEIW,UAAU,GAAU;IAAA,mCAANX,IAAM;MAANA,IAAM;IAAA;;IAChB,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACC,CAAD,EAAIC,KAAJ,KAAe,YAAWA,KAAM,yBAAwBE,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAqB,IADjE;MAErBQ,SAAS,EAAEC,GAAG,IAAIT,IAAI,CAACY,IAAL,CAAUC,GAAG,IAAIJ,GAAG,CAACK,GAAJ,CAAQD,GAAR,CAAjB;IAFG,CAAlB,CAAP;EAIH;;AA5BgD;;AA8BrDvB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}