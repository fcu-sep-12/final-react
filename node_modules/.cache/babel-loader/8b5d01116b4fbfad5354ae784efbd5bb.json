{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n\n      for (const id of ids) {\n        const message = this.getMessage({\n          id,\n          guild_id: data.guild_id\n        }, channel, false);\n\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       */\n\n\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return {\n        messages\n      };\n    }\n\n    return {};\n  }\n\n}\n\nmodule.exports = MessageDeleteBulkAction;","map":{"version":3,"names":["Collection","require","Action","Events","MessageDeleteBulkAction","handle","data","client","channel","channels","cache","get","channel_id","ids","messages","id","message","getMessage","guild_id","deleted","set","delete","size","emit","MESSAGE_BULK_DELETE","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their id\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,uBAAD,CAA9B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;EAAEE;AAAF,IAAaF,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAMG,uBAAN,SAAsCF,MAAtC,CAA6C;EAC3CG,MAAM,CAACC,IAAD,EAAO;IACX,MAAMC,MAAM,GAAG,KAAKA,MAApB;IACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BL,IAAI,CAACM,UAA/B,CAAhB;;IAEA,IAAIJ,OAAJ,EAAa;MACX,MAAMK,GAAG,GAAGP,IAAI,CAACO,GAAjB;MACA,MAAMC,QAAQ,GAAG,IAAId,UAAJ,EAAjB;;MACA,KAAK,MAAMe,EAAX,IAAiBF,GAAjB,EAAsB;QACpB,MAAMG,OAAO,GAAG,KAAKC,UAAL,CACd;UACEF,EADF;UAEEG,QAAQ,EAAEZ,IAAI,CAACY;QAFjB,CADc,EAKdV,OALc,EAMd,KANc,CAAhB;;QAQA,IAAIQ,OAAJ,EAAa;UACXA,OAAO,CAACG,OAAR,GAAkB,IAAlB;UACAL,QAAQ,CAACM,GAAT,CAAaJ,OAAO,CAACD,EAArB,EAAyBC,OAAzB;UACAR,OAAO,CAACM,QAAR,CAAiBJ,KAAjB,CAAuBW,MAAvB,CAA8BN,EAA9B;QACD;MACF;MAED;AACN;AACA;AACA;AACA;;;MACM,IAAID,QAAQ,CAACQ,IAAT,GAAgB,CAApB,EAAuBf,MAAM,CAACgB,IAAP,CAAYpB,MAAM,CAACqB,mBAAnB,EAAwCV,QAAxC;MACvB,OAAO;QAAEA;MAAF,CAAP;IACD;;IACD,OAAO,EAAP;EACD;;AAjC0C;;AAoC7CW,MAAM,CAACC,OAAP,GAAiBtB,uBAAjB"},"metadata":{},"sourceType":"script"}