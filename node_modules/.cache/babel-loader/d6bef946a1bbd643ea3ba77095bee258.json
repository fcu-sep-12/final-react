{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateArgumentErrorMessage = void 0;\n/**\nGenerates a complete message from all errors generated by predicates.\n\n@param errors - The errors generated by the predicates.\n@param isAny - If this function is called from the any argument.\n@hidden\n*/\n\nconst generateArgumentErrorMessage = function (errors) {\n  let isAny = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const message = [];\n  const errorArray = [...errors.entries()];\n  const anyErrorWithoutOneItemOnly = errorArray.some(_ref => {\n    let [, array] = _ref;\n    return array.size !== 1;\n  }); // If only one error \"key\" is present, enumerate all of those errors only.\n\n  if (errorArray.length === 1) {\n    const [, returnedErrors] = errorArray[0];\n\n    if (!isAny && returnedErrors.size === 1) {\n      const [errorMessage] = returnedErrors;\n      return errorMessage;\n    }\n\n    for (const entry of returnedErrors) {\n      message.push(`${isAny ? '  - ' : ''}${entry}`);\n    }\n\n    return message.join('\\n');\n  } // If every predicate returns just one error, enumerate them as is.\n\n\n  if (!anyErrorWithoutOneItemOnly) {\n    return errorArray.map(_ref2 => {\n      let [, [item]] = _ref2;\n      return `  - ${item}`;\n    }).join('\\n');\n  } // Else, iterate through all the errors and enumerate them.\n\n\n  for (const [key, value] of errorArray) {\n    message.push(`Errors from the \"${key}\" predicate:`);\n\n    for (const entry of value) {\n      message.push(`  - ${entry}`);\n    }\n  }\n\n  return message.join('\\n');\n};\n\nexports.generateArgumentErrorMessage = generateArgumentErrorMessage;","map":{"version":3,"names":["Object","defineProperty","exports","value","generateArgumentErrorMessage","errors","isAny","message","errorArray","entries","anyErrorWithoutOneItemOnly","some","array","size","length","returnedErrors","errorMessage","entry","push","join","map","item","key"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/utils/generate-argument-error-message.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateArgumentErrorMessage = void 0;\n/**\nGenerates a complete message from all errors generated by predicates.\n\n@param errors - The errors generated by the predicates.\n@param isAny - If this function is called from the any argument.\n@hidden\n*/\nconst generateArgumentErrorMessage = (errors, isAny = false) => {\n    const message = [];\n    const errorArray = [...errors.entries()];\n    const anyErrorWithoutOneItemOnly = errorArray.some(([, array]) => array.size !== 1);\n    // If only one error \"key\" is present, enumerate all of those errors only.\n    if (errorArray.length === 1) {\n        const [, returnedErrors] = errorArray[0];\n        if (!isAny && returnedErrors.size === 1) {\n            const [errorMessage] = returnedErrors;\n            return errorMessage;\n        }\n        for (const entry of returnedErrors) {\n            message.push(`${isAny ? '  - ' : ''}${entry}`);\n        }\n        return message.join('\\n');\n    }\n    // If every predicate returns just one error, enumerate them as is.\n    if (!anyErrorWithoutOneItemOnly) {\n        return errorArray.map(([, [item]]) => `  - ${item}`).join('\\n');\n    }\n    // Else, iterate through all the errors and enumerate them.\n    for (const [key, value] of errorArray) {\n        message.push(`Errors from the \"${key}\" predicate:`);\n        for (const entry of value) {\n            message.push(`  - ${entry}`);\n        }\n    }\n    return message.join('\\n');\n};\nexports.generateArgumentErrorMessage = generateArgumentErrorMessage;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,4BAA4B,GAAG,UAACC,MAAD,EAA2B;EAAA,IAAlBC,KAAkB,uEAAV,KAAU;EAC5D,MAAMC,OAAO,GAAG,EAAhB;EACA,MAAMC,UAAU,GAAG,CAAC,GAAGH,MAAM,CAACI,OAAP,EAAJ,CAAnB;EACA,MAAMC,0BAA0B,GAAGF,UAAU,CAACG,IAAX,CAAgB;IAAA,IAAC,GAAGC,KAAH,CAAD;IAAA,OAAeA,KAAK,CAACC,IAAN,KAAe,CAA9B;EAAA,CAAhB,CAAnC,CAH4D,CAI5D;;EACA,IAAIL,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;IACzB,MAAM,GAAGC,cAAH,IAAqBP,UAAU,CAAC,CAAD,CAArC;;IACA,IAAI,CAACF,KAAD,IAAUS,cAAc,CAACF,IAAf,KAAwB,CAAtC,EAAyC;MACrC,MAAM,CAACG,YAAD,IAAiBD,cAAvB;MACA,OAAOC,YAAP;IACH;;IACD,KAAK,MAAMC,KAAX,IAAoBF,cAApB,EAAoC;MAChCR,OAAO,CAACW,IAAR,CAAc,GAAEZ,KAAK,GAAG,MAAH,GAAY,EAAG,GAAEW,KAAM,EAA5C;IACH;;IACD,OAAOV,OAAO,CAACY,IAAR,CAAa,IAAb,CAAP;EACH,CAf2D,CAgB5D;;;EACA,IAAI,CAACT,0BAAL,EAAiC;IAC7B,OAAOF,UAAU,CAACY,GAAX,CAAe;MAAA,IAAC,GAAG,CAACC,IAAD,CAAH,CAAD;MAAA,OAAiB,OAAMA,IAAK,EAA5B;IAAA,CAAf,EAA8CF,IAA9C,CAAmD,IAAnD,CAAP;EACH,CAnB2D,CAoB5D;;;EACA,KAAK,MAAM,CAACG,GAAD,EAAMnB,KAAN,CAAX,IAA2BK,UAA3B,EAAuC;IACnCD,OAAO,CAACW,IAAR,CAAc,oBAAmBI,GAAI,cAArC;;IACA,KAAK,MAAML,KAAX,IAAoBd,KAApB,EAA2B;MACvBI,OAAO,CAACW,IAAR,CAAc,OAAMD,KAAM,EAA1B;IACH;EACJ;;EACD,OAAOV,OAAO,CAACY,IAAR,CAAa,IAAb,CAAP;AACH,CA5BD;;AA6BAjB,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}