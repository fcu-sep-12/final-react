{"ast":null,"code":"'use strict';\n\nconst {\n  Events\n} = require('../../../util/Constants');\n\nmodule.exports = (client, packet) => {\n  const {\n    old,\n    updated\n  } = client.actions.MessageUpdate.handle(packet.d);\n\n  if (old && updated) {\n    /**\n     * Emitted whenever a message is updated - e.g. embed or content change.\n     * @event Client#messageUpdate\n     * @param {Message} oldMessage The message before the update\n     * @param {Message} newMessage The message after the update\n     */\n    client.emit(Events.MESSAGE_UPDATE, old, updated);\n  }\n};","map":{"version":3,"names":["Events","require","module","exports","client","packet","old","updated","actions","MessageUpdate","handle","d","emit","MESSAGE_UPDATE"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/websocket/handlers/MESSAGE_UPDATE.js"],"sourcesContent":["'use strict';\n\nconst { Events } = require('../../../util/Constants');\n\nmodule.exports = (client, packet) => {\n  const { old, updated } = client.actions.MessageUpdate.handle(packet.d);\n  if (old && updated) {\n    /**\n     * Emitted whenever a message is updated - e.g. embed or content change.\n     * @event Client#messageUpdate\n     * @param {Message} oldMessage The message before the update\n     * @param {Message} newMessage The message after the update\n     */\n    client.emit(Events.MESSAGE_UPDATE, old, updated);\n  }\n};\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAaC,OAAO,CAAC,yBAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,MAAT,KAAoB;EACnC,MAAM;IAAEC,GAAF;IAAOC;EAAP,IAAmBH,MAAM,CAACI,OAAP,CAAeC,aAAf,CAA6BC,MAA7B,CAAoCL,MAAM,CAACM,CAA3C,CAAzB;;EACA,IAAIL,GAAG,IAAIC,OAAX,EAAoB;IAClB;AACJ;AACA;AACA;AACA;AACA;IACIH,MAAM,CAACQ,IAAP,CAAYZ,MAAM,CAACa,cAAnB,EAAmCP,GAAnC,EAAwCC,OAAxC;EACD;AACF,CAXD"},"metadata":{},"sourceType":"script"}