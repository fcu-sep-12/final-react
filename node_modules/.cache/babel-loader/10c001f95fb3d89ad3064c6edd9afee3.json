{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\n\n\nclass Typing extends Base {\n  /**\n   * @param {TextBasedChannels} channel The channel this typing came from\n   * @param {User} user The user that started typing\n   * @param {APITypingStart} data The raw data received\n   */\n  constructor(channel, user, data) {\n    super(channel.client);\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n\n    this.channel = channel;\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The UNIX timestamp in milliseconds the user started typing at\n     * @type {number}\n     */\n    this.startedTimestamp = data.timestamp * 1000;\n  }\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n\n\n  inGuild() {\n    return this.guild !== null;\n  }\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n\n\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n\n\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n\n\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n\n}\n\nmodule.exports = Typing;\n/**\n * @external APITypingStart\n * @see {@link https://discord.com/developers/docs/topics/gateway#typing-start-typing-start-event-fields}\n */","map":{"version":3,"names":["Base","require","Typing","constructor","channel","user","data","client","_patch","startedTimestamp","timestamp","inGuild","guild","startedAt","Date","member","members","resolve","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/Typing.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a typing state for a user in a channel.\n * @extends {Base}\n */\nclass Typing extends Base {\n  /**\n   * @param {TextBasedChannels} channel The channel this typing came from\n   * @param {User} user The user that started typing\n   * @param {APITypingStart} data The raw data received\n   */\n  constructor(channel, user, data) {\n    super(channel.client);\n\n    /**\n     * The channel the status is from\n     * @type {TextBasedChannels}\n     */\n    this.channel = channel;\n\n    /**\n     * The user who is typing\n     * @type {User}\n     */\n    this.user = user;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The UNIX timestamp in milliseconds the user started typing at\n     * @type {number}\n     */\n    this.startedTimestamp = data.timestamp * 1000;\n  }\n\n  /**\n   * Indicates whether the status is received from a guild.\n   * @returns {boolean}\n   */\n  inGuild() {\n    return this.guild !== null;\n  }\n\n  /**\n   * The time the user started typing at\n   * @type {Date}\n   * @readonly\n   */\n  get startedAt() {\n    return new Date(this.startedTimestamp);\n  }\n\n  /**\n   * The guild the status is from\n   * @type {?Guild}\n   * @readonly\n   */\n  get guild() {\n    return this.channel.guild ?? null;\n  }\n\n  /**\n   * The member who is typing\n   * @type {?GuildMember}\n   * @readonly\n   */\n  get member() {\n    return this.guild?.members.resolve(this.user) ?? null;\n  }\n}\n\nmodule.exports = Typing;\n\n/**\n * @external APITypingStart\n * @see {@link https://discord.com/developers/docs/topics/gateway#typing-start-typing-start-event-fields}\n */\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,MAAN,SAAqBF,IAArB,CAA0B;EACxB;AACF;AACA;AACA;AACA;EACEG,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,EAAsB;IAC/B,MAAMF,OAAO,CAACG,MAAd;IAEA;AACJ;AACA;AACA;;IACI,KAAKH,OAAL,GAAeA,OAAf;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYA,IAAZ;;IAEA,KAAKG,MAAL,CAAYF,IAAZ;EACD;;EAEDE,MAAM,CAACF,IAAD,EAAO;IACX;AACJ;AACA;AACA;IACI,KAAKG,gBAAL,GAAwBH,IAAI,CAACI,SAAL,GAAiB,IAAzC;EACD;EAED;AACF;AACA;AACA;;;EACEC,OAAO,GAAG;IACR,OAAO,KAAKC,KAAL,KAAe,IAAtB;EACD;EAED;AACF;AACA;AACA;AACA;;;EACe,IAATC,SAAS,GAAG;IACd,OAAO,IAAIC,IAAJ,CAAS,KAAKL,gBAAd,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACW,IAALG,KAAK,GAAG;IACV,OAAO,KAAKR,OAAL,CAAaQ,KAAb,IAAsB,IAA7B;EACD;EAED;AACF;AACA;AACA;AACA;;;EACY,IAANG,MAAM,GAAG;IACX,OAAO,KAAKH,KAAL,EAAYI,OAAZ,CAAoBC,OAApB,CAA4B,KAAKZ,IAAjC,KAA0C,IAAjD;EACD;;AAjEuB;;AAoE1Ba,MAAM,CAACC,OAAP,GAAiBjB,MAAjB;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}