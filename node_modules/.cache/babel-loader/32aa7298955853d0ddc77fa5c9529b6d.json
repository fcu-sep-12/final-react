{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n/**\n * Represents a ban in a guild on Discord.\n * @extends {Base}\n */\n\n\nclass GuildBan extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIBanData} data The data for the ban\n   * @param {Guild} guild The guild in which the ban is\n   */\n  constructor(client, data, guild) {\n    super(client);\n    /**\n     * The guild in which the ban is\n     * @type {Guild}\n     */\n\n    this.guild = guild;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The user this ban applies to\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user, true);\n\n    if ('reason' in data) {\n      /**\n       * The reason for the ban\n       * @type {?string}\n       */\n      this.reason = data.reason;\n    }\n  }\n  /**\n   * Whether this GuildBan is partial. If the reason is not provided the value is null\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get partial() {\n    return !('reason' in this);\n  }\n  /**\n   * Fetches this GuildBan.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildBan>}\n   */\n\n\n  fetch() {\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.guild.bans.fetch({\n      user: this.user,\n      cache: true,\n      force\n    });\n  }\n\n}\n\nmodule.exports = GuildBan;\n/**\n * @external APIBanData\n * @see {@link https://discord.com/developers/docs/resources/guild#create-guild-ban-json-params}\n */","map":{"version":3,"names":["Base","require","GuildBan","constructor","client","data","guild","_patch","user","users","_add","reason","partial","fetch","force","bans","cache","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/GuildBan.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a ban in a guild on Discord.\n * @extends {Base}\n */\nclass GuildBan extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIBanData} data The data for the ban\n   * @param {Guild} guild The guild in which the ban is\n   */\n  constructor(client, data, guild) {\n    super(client);\n\n    /**\n     * The guild in which the ban is\n     * @type {Guild}\n     */\n    this.guild = guild;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The user this ban applies to\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user, true);\n\n    if ('reason' in data) {\n      /**\n       * The reason for the ban\n       * @type {?string}\n       */\n      this.reason = data.reason;\n    }\n  }\n\n  /**\n   * Whether this GuildBan is partial. If the reason is not provided the value is null\n   * @type {boolean}\n   * @readonly\n   */\n  get partial() {\n    return !('reason' in this);\n  }\n\n  /**\n   * Fetches this GuildBan.\n   * @param {boolean} [force=true] Whether to skip the cache check and request the API\n   * @returns {Promise<GuildBan>}\n   */\n  fetch(force = true) {\n    return this.guild.bans.fetch({ user: this.user, cache: true, force });\n  }\n}\n\nmodule.exports = GuildBan;\n\n/**\n * @external APIBanData\n * @see {@link https://discord.com/developers/docs/resources/guild#create-guild-ban-json-params}\n */\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,QAAN,SAAuBF,IAAvB,CAA4B;EAC1B;AACF;AACA;AACA;AACA;EACEG,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsB;IAC/B,MAAMF,MAAN;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,KAAL,GAAaA,KAAb;;IAEA,KAAKC,MAAL,CAAYF,IAAZ;EACD;;EAEDE,MAAM,CAACF,IAAD,EAAO;IACX;AACJ;AACA;AACA;IACI,KAAKG,IAAL,GAAY,KAAKJ,MAAL,CAAYK,KAAZ,CAAkBC,IAAlB,CAAuBL,IAAI,CAACG,IAA5B,EAAkC,IAAlC,CAAZ;;IAEA,IAAI,YAAYH,IAAhB,EAAsB;MACpB;AACN;AACA;AACA;MACM,KAAKM,MAAL,GAAcN,IAAI,CAACM,MAAnB;IACD;EACF;EAED;AACF;AACA;AACA;AACA;;;EACa,IAAPC,OAAO,GAAG;IACZ,OAAO,EAAE,YAAY,IAAd,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEC,KAAK,GAAe;IAAA,IAAdC,KAAc,uEAAN,IAAM;IAClB,OAAO,KAAKR,KAAL,CAAWS,IAAX,CAAgBF,KAAhB,CAAsB;MAAEL,IAAI,EAAE,KAAKA,IAAb;MAAmBQ,KAAK,EAAE,IAA1B;MAAgCF;IAAhC,CAAtB,CAAP;EACD;;AAlDyB;;AAqD5BG,MAAM,CAACC,OAAP,GAAiBhB,QAAjB;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}