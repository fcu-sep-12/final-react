{"ast":null,"code":"'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\n\nconst MessageEmbed = require('./MessageEmbed');\n\nconst {\n  RangeError\n} = require('../errors');\n\nconst DataResolver = require('../util/DataResolver');\n\nconst MessageFlags = require('../util/MessageFlags');\n\nconst Util = require('../util/Util');\n/**\n * Represents a message to be sent to the API.\n */\n\n\nclass MessagePayload {\n  /**\n   * @param {MessageTarget} target - The target for this message to be sent to\n   * @param {MessageOptions|WebhookMessageOptions} options - Options passed in from send\n   */\n  constructor(target, options) {\n    /**\n     * The target for this message to be sent to\n     * @type {MessageTarget}\n     */\n    this.target = target;\n    /**\n     * Options passed in from send\n     * @type {MessageOptions|WebhookMessageOptions}\n     */\n\n    this.options = options;\n    /**\n     * Data sendable to the API\n     * @type {?APIMessage}\n     */\n\n    this.data = null;\n    /**\n     * @typedef {Object} MessageFile\n     * @property {Buffer|string|Stream} attachment The original attachment that generated this file\n     * @property {string} name The name of this file\n     * @property {Buffer|Stream} file The file to be sent to the API\n     */\n\n    /**\n     * Files sendable to the API\n     * @type {?MessageFile[]}\n     */\n\n    this.files = null;\n  }\n  /**\n   * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get isWebhook() {\n    const Webhook = require('./Webhook');\n\n    const WebhookClient = require('../client/WebhookClient');\n\n    return this.target instanceof Webhook || this.target instanceof WebhookClient;\n  }\n  /**\n   * Whether or not the target is a {@link User}\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get isUser() {\n    const User = require('./User');\n\n    const GuildMember = require('./GuildMember');\n\n    return this.target instanceof User || this.target instanceof GuildMember;\n  }\n  /**\n   * Whether or not the target is a {@link Message}\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get isMessage() {\n    const Message = require('./Message');\n\n    return this.target instanceof Message;\n  }\n  /**\n   * Wether or not the target is a {@link MessageManager}\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get isMessageManager() {\n    const MessageManager = require('../managers/MessageManager');\n\n    return this.target instanceof MessageManager;\n  }\n  /**\n   * Whether or not the target is an {@link Interaction} or an {@link InteractionWebhook}\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get isInteraction() {\n    const Interaction = require('./Interaction');\n\n    const InteractionWebhook = require('./InteractionWebhook');\n\n    return this.target instanceof Interaction || this.target instanceof InteractionWebhook;\n  }\n  /**\n   * Makes the content of this message.\n   * @returns {?string}\n   */\n\n\n  makeContent() {\n    let content;\n\n    if (this.options.content === null) {\n      content = '';\n    } else if (typeof this.options.content !== 'undefined') {\n      content = Util.verifyString(this.options.content, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    }\n\n    return content;\n  }\n  /**\n   * Resolves data.\n   * @returns {MessagePayload}\n   */\n\n\n  resolveData() {\n    if (this.data) return this;\n    const isInteraction = this.isInteraction;\n    const isWebhook = this.isWebhook;\n    const content = this.makeContent();\n    const tts = Boolean(this.options.tts);\n    let nonce;\n\n    if (typeof this.options.nonce !== 'undefined') {\n      nonce = this.options.nonce; // eslint-disable-next-line max-len\n\n      if (typeof nonce === 'number' ? !Number.isInteger(nonce) : typeof nonce !== 'string') {\n        throw new RangeError('MESSAGE_NONCE_TYPE');\n      }\n    }\n\n    const components = this.options.components?.map(c => BaseMessageComponent.create(c).toJSON());\n    let username;\n    let avatarURL;\n\n    if (isWebhook) {\n      username = this.options.username ?? this.target.name;\n      if (this.options.avatarURL) avatarURL = this.options.avatarURL;\n    }\n\n    let flags;\n\n    if (this.isMessage || this.isMessageManager) {\n      // eslint-disable-next-line eqeqeq\n      flags = this.options.flags != null ? new MessageFlags(this.options.flags).bitfield : this.target.flags?.bitfield;\n    } else if (isInteraction && this.options.ephemeral) {\n      flags = MessageFlags.FLAGS.EPHEMERAL;\n    }\n\n    let allowedMentions = typeof this.options.allowedMentions === 'undefined' ? this.target.client.options.allowedMentions : this.options.allowedMentions;\n\n    if (allowedMentions) {\n      allowedMentions = Util.cloneObject(allowedMentions);\n      allowedMentions.replied_user = allowedMentions.repliedUser;\n      delete allowedMentions.repliedUser;\n    }\n\n    let message_reference;\n\n    if (typeof this.options.reply === 'object') {\n      const reference = this.options.reply.messageReference;\n      const message_id = this.isMessage ? reference.id ?? reference : this.target.messages.resolveId(reference);\n\n      if (message_id) {\n        message_reference = {\n          message_id,\n          fail_if_not_exists: this.options.reply.failIfNotExists ?? this.target.client.options.failIfNotExists\n        };\n      }\n    }\n\n    this.data = {\n      content,\n      tts,\n      nonce,\n      embeds: this.options.embeds?.map(embed => new MessageEmbed(embed).toJSON()),\n      components,\n      username,\n      avatar_url: avatarURL,\n      allowed_mentions: typeof content === 'undefined' && typeof message_reference === 'undefined' ? undefined : allowedMentions,\n      flags,\n      message_reference,\n      attachments: this.options.attachments,\n      sticker_ids: this.options.stickers?.map(sticker => sticker.id ?? sticker)\n    };\n    return this;\n  }\n  /**\n   * Resolves files.\n   * @returns {Promise<MessagePayload>}\n   */\n\n\n  async resolveFiles() {\n    if (this.files) return this;\n    this.files = await Promise.all(this.options.files?.map(file => this.constructor.resolveFile(file)) ?? []);\n    return this;\n  }\n  /**\n   * Resolves a single file into an object sendable to the API.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} fileLike Something that could be resolved to a file\n   * @returns {MessageFile}\n   */\n\n\n  static async resolveFile(fileLike) {\n    let attachment;\n    let name;\n\n    const findName = thing => {\n      if (typeof thing === 'string') {\n        return Util.basename(thing);\n      }\n\n      if (thing.path) {\n        return Util.basename(thing.path);\n      }\n\n      return 'file.jpg';\n    };\n\n    const ownAttachment = typeof fileLike === 'string' || fileLike instanceof Buffer || typeof fileLike.pipe === 'function';\n\n    if (ownAttachment) {\n      attachment = fileLike;\n      name = findName(attachment);\n    } else {\n      attachment = fileLike.attachment;\n      name = fileLike.name ?? findName(attachment);\n    }\n\n    const resource = await DataResolver.resolveFile(attachment);\n    return {\n      attachment,\n      name,\n      file: resource\n    };\n  }\n  /**\n   * Creates a {@link MessagePayload} from user-level arguments.\n   * @param {MessageTarget} target Target to send to\n   * @param {string|MessageOptions|WebhookMessageOptions} options Options or content to use\n   * @param {MessageOptions|WebhookMessageOptions} [extra={}] - Extra options to add onto specified options\n   * @returns {MessagePayload}\n   */\n\n\n  static create(target, options) {\n    let extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new this(target, typeof options !== 'object' || options === null ? {\n      content: options,\n      ...extra\n    } : { ...options,\n      ...extra\n    });\n  }\n\n}\n\nmodule.exports = MessagePayload;\n/**\n * A target for a message.\n * @typedef {TextChannel|DMChannel|User|GuildMember|Webhook|WebhookClient|Interaction|InteractionWebhook|\n * Message|MessageManager} MessageTarget\n */\n\n/**\n * @external APIMessage\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object}\n */","map":{"version":3,"names":["BaseMessageComponent","require","MessageEmbed","RangeError","DataResolver","MessageFlags","Util","MessagePayload","constructor","target","options","data","files","isWebhook","Webhook","WebhookClient","isUser","User","GuildMember","isMessage","Message","isMessageManager","MessageManager","isInteraction","Interaction","InteractionWebhook","makeContent","content","verifyString","resolveData","tts","Boolean","nonce","Number","isInteger","components","map","c","create","toJSON","username","avatarURL","name","flags","bitfield","ephemeral","FLAGS","EPHEMERAL","allowedMentions","client","cloneObject","replied_user","repliedUser","message_reference","reply","reference","messageReference","message_id","id","messages","resolveId","fail_if_not_exists","failIfNotExists","embeds","embed","avatar_url","allowed_mentions","undefined","attachments","sticker_ids","stickers","sticker","resolveFiles","Promise","all","file","resolveFile","fileLike","attachment","findName","thing","basename","path","ownAttachment","Buffer","pipe","resource","extra","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/MessagePayload.js"],"sourcesContent":["'use strict';\n\nconst BaseMessageComponent = require('./BaseMessageComponent');\nconst MessageEmbed = require('./MessageEmbed');\nconst { RangeError } = require('../errors');\nconst DataResolver = require('../util/DataResolver');\nconst MessageFlags = require('../util/MessageFlags');\nconst Util = require('../util/Util');\n\n/**\n * Represents a message to be sent to the API.\n */\nclass MessagePayload {\n  /**\n   * @param {MessageTarget} target - The target for this message to be sent to\n   * @param {MessageOptions|WebhookMessageOptions} options - Options passed in from send\n   */\n  constructor(target, options) {\n    /**\n     * The target for this message to be sent to\n     * @type {MessageTarget}\n     */\n    this.target = target;\n\n    /**\n     * Options passed in from send\n     * @type {MessageOptions|WebhookMessageOptions}\n     */\n    this.options = options;\n\n    /**\n     * Data sendable to the API\n     * @type {?APIMessage}\n     */\n    this.data = null;\n\n    /**\n     * @typedef {Object} MessageFile\n     * @property {Buffer|string|Stream} attachment The original attachment that generated this file\n     * @property {string} name The name of this file\n     * @property {Buffer|Stream} file The file to be sent to the API\n     */\n\n    /**\n     * Files sendable to the API\n     * @type {?MessageFile[]}\n     */\n    this.files = null;\n  }\n\n  /**\n   * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n   * @type {boolean}\n   * @readonly\n   */\n  get isWebhook() {\n    const Webhook = require('./Webhook');\n    const WebhookClient = require('../client/WebhookClient');\n    return this.target instanceof Webhook || this.target instanceof WebhookClient;\n  }\n\n  /**\n   * Whether or not the target is a {@link User}\n   * @type {boolean}\n   * @readonly\n   */\n  get isUser() {\n    const User = require('./User');\n    const GuildMember = require('./GuildMember');\n    return this.target instanceof User || this.target instanceof GuildMember;\n  }\n\n  /**\n   * Whether or not the target is a {@link Message}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessage() {\n    const Message = require('./Message');\n    return this.target instanceof Message;\n  }\n\n  /**\n   * Wether or not the target is a {@link MessageManager}\n   * @type {boolean}\n   * @readonly\n   */\n  get isMessageManager() {\n    const MessageManager = require('../managers/MessageManager');\n    return this.target instanceof MessageManager;\n  }\n\n  /**\n   * Whether or not the target is an {@link Interaction} or an {@link InteractionWebhook}\n   * @type {boolean}\n   * @readonly\n   */\n  get isInteraction() {\n    const Interaction = require('./Interaction');\n    const InteractionWebhook = require('./InteractionWebhook');\n    return this.target instanceof Interaction || this.target instanceof InteractionWebhook;\n  }\n\n  /**\n   * Makes the content of this message.\n   * @returns {?string}\n   */\n  makeContent() {\n    let content;\n    if (this.options.content === null) {\n      content = '';\n    } else if (typeof this.options.content !== 'undefined') {\n      content = Util.verifyString(this.options.content, RangeError, 'MESSAGE_CONTENT_TYPE', false);\n    }\n\n    return content;\n  }\n\n  /**\n   * Resolves data.\n   * @returns {MessagePayload}\n   */\n  resolveData() {\n    if (this.data) return this;\n    const isInteraction = this.isInteraction;\n    const isWebhook = this.isWebhook;\n\n    const content = this.makeContent();\n    const tts = Boolean(this.options.tts);\n\n    let nonce;\n    if (typeof this.options.nonce !== 'undefined') {\n      nonce = this.options.nonce;\n      // eslint-disable-next-line max-len\n      if (typeof nonce === 'number' ? !Number.isInteger(nonce) : typeof nonce !== 'string') {\n        throw new RangeError('MESSAGE_NONCE_TYPE');\n      }\n    }\n\n    const components = this.options.components?.map(c => BaseMessageComponent.create(c).toJSON());\n\n    let username;\n    let avatarURL;\n    if (isWebhook) {\n      username = this.options.username ?? this.target.name;\n      if (this.options.avatarURL) avatarURL = this.options.avatarURL;\n    }\n\n    let flags;\n    if (this.isMessage || this.isMessageManager) {\n      // eslint-disable-next-line eqeqeq\n      flags = this.options.flags != null ? new MessageFlags(this.options.flags).bitfield : this.target.flags?.bitfield;\n    } else if (isInteraction && this.options.ephemeral) {\n      flags = MessageFlags.FLAGS.EPHEMERAL;\n    }\n\n    let allowedMentions =\n      typeof this.options.allowedMentions === 'undefined'\n        ? this.target.client.options.allowedMentions\n        : this.options.allowedMentions;\n\n    if (allowedMentions) {\n      allowedMentions = Util.cloneObject(allowedMentions);\n      allowedMentions.replied_user = allowedMentions.repliedUser;\n      delete allowedMentions.repliedUser;\n    }\n\n    let message_reference;\n    if (typeof this.options.reply === 'object') {\n      const reference = this.options.reply.messageReference;\n      const message_id = this.isMessage ? reference.id ?? reference : this.target.messages.resolveId(reference);\n      if (message_id) {\n        message_reference = {\n          message_id,\n          fail_if_not_exists: this.options.reply.failIfNotExists ?? this.target.client.options.failIfNotExists,\n        };\n      }\n    }\n\n    this.data = {\n      content,\n      tts,\n      nonce,\n      embeds: this.options.embeds?.map(embed => new MessageEmbed(embed).toJSON()),\n      components,\n      username,\n      avatar_url: avatarURL,\n      allowed_mentions:\n        typeof content === 'undefined' && typeof message_reference === 'undefined' ? undefined : allowedMentions,\n      flags,\n      message_reference,\n      attachments: this.options.attachments,\n      sticker_ids: this.options.stickers?.map(sticker => sticker.id ?? sticker),\n    };\n    return this;\n  }\n\n  /**\n   * Resolves files.\n   * @returns {Promise<MessagePayload>}\n   */\n  async resolveFiles() {\n    if (this.files) return this;\n\n    this.files = await Promise.all(this.options.files?.map(file => this.constructor.resolveFile(file)) ?? []);\n    return this;\n  }\n\n  /**\n   * Resolves a single file into an object sendable to the API.\n   * @param {BufferResolvable|Stream|FileOptions|MessageAttachment} fileLike Something that could be resolved to a file\n   * @returns {MessageFile}\n   */\n  static async resolveFile(fileLike) {\n    let attachment;\n    let name;\n\n    const findName = thing => {\n      if (typeof thing === 'string') {\n        return Util.basename(thing);\n      }\n\n      if (thing.path) {\n        return Util.basename(thing.path);\n      }\n\n      return 'file.jpg';\n    };\n\n    const ownAttachment =\n      typeof fileLike === 'string' || fileLike instanceof Buffer || typeof fileLike.pipe === 'function';\n    if (ownAttachment) {\n      attachment = fileLike;\n      name = findName(attachment);\n    } else {\n      attachment = fileLike.attachment;\n      name = fileLike.name ?? findName(attachment);\n    }\n\n    const resource = await DataResolver.resolveFile(attachment);\n    return { attachment, name, file: resource };\n  }\n\n  /**\n   * Creates a {@link MessagePayload} from user-level arguments.\n   * @param {MessageTarget} target Target to send to\n   * @param {string|MessageOptions|WebhookMessageOptions} options Options or content to use\n   * @param {MessageOptions|WebhookMessageOptions} [extra={}] - Extra options to add onto specified options\n   * @returns {MessagePayload}\n   */\n  static create(target, options, extra = {}) {\n    return new this(\n      target,\n      typeof options !== 'object' || options === null ? { content: options, ...extra } : { ...options, ...extra },\n    );\n  }\n}\n\nmodule.exports = MessagePayload;\n\n/**\n * A target for a message.\n * @typedef {TextChannel|DMChannel|User|GuildMember|Webhook|WebhookClient|Interaction|InteractionWebhook|\n * Message|MessageManager} MessageTarget\n */\n\n/**\n * @external APIMessage\n * @see {@link https://discord.com/developers/docs/resources/channel#message-object}\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}