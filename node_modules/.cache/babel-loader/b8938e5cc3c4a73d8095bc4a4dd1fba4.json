{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SlashCommandOptionBase = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst ow_1 = tslib_1.__importDefault(require(\"ow\"));\n\nconst Assertions_1 = require(\"../Assertions\");\n\nconst NameAndDescription_1 = require(\"./NameAndDescription\");\n\nclass SlashCommandOptionBase extends NameAndDescription_1.SharedNameAndDescription {\n  constructor(type) {\n    super();\n    Object.defineProperty(this, \"required\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"type\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.type = type;\n  }\n  /**\n   * Marks the option as required\n   * @param required If this option should be required\n   */\n\n\n  setRequired(required) {\n    // Assert that you actually passed a boolean\n    ow_1.default(required, 'required', ow_1.default.boolean);\n    this.required = required;\n    return this;\n  }\n\n  toJSON() {\n    Assertions_1.validateRequiredParameters(this.name, this.description, []); // Assert that you actually passed a boolean\n\n    ow_1.default(this.required, 'required', ow_1.default.boolean);\n    return {\n      type: this.type,\n      name: this.name,\n      description: this.description,\n      required: this.required\n    };\n  }\n\n}\n\nexports.SlashCommandOptionBase = SlashCommandOptionBase;","map":{"version":3,"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;AAEA,MAAaA,sBAAb,SAA4CC,6CAA5C,CAAoE;EAInEC,YAAmBC,IAAnB,EAAqD;IACpD;IAJDC;sBAAA;wBAAA;oBAAA;aAAkB;IAAlB;IACAA;sBAAA;wBAAA;oBAAA;;IAAA;IAIC,KAAKD,IAAL,GAAYA,IAAZ;EACA;EAED;;;;;;EAIOE,WAAW,CAACC,QAAD,EAAkB;IACnC;IACAC,aAAGD,QAAH,EAAa,UAAb,EAAyBC,aAAGC,OAA5B;IAEA,KAAKF,QAAL,GAAgBA,QAAhB;IAEA,OAAO,IAAP;EACA;;EAEMG,MAAM;IACZC,wCAA2B,KAAKC,IAAhC,EAAsC,KAAKC,WAA3C,EAAwD,EAAxD,EADY,CAGZ;;IACAL,aAAG,KAAKD,QAAR,EAAkB,UAAlB,EAA8BC,aAAGC,OAAjC;IAEA,OAAO;MACNL,IAAI,EAAE,KAAKA,IADL;MAENQ,IAAI,EAAE,KAAKA,IAFL;MAGNC,WAAW,EAAE,KAAKA,WAHZ;MAINN,QAAQ,EAAE,KAAKA;IAJT,CAAP;EAMA;;AAlCkE;;AAApEO","names":["SlashCommandOptionBase","NameAndDescription_1","constructor","type","Object","setRequired","required","ow_1","boolean","toJSON","Assertions_1","name","description","exports"],"sources":["\\interactions\\slashCommands\\mixins\\CommandOptionBase.ts"],"sourcesContent":["import type { ApplicationCommandOptionType } from 'discord-api-types/v9';\nimport ow from 'ow';\nimport { validateRequiredParameters } from '../Assertions';\nimport type { ToAPIApplicationCommandOptions } from '../SlashCommandBuilder';\nimport { SharedNameAndDescription } from './NameAndDescription';\n\nexport class SlashCommandOptionBase extends SharedNameAndDescription implements ToAPIApplicationCommandOptions {\n\tpublic required = false;\n\tpublic readonly type: ApplicationCommandOptionType;\n\n\tpublic constructor(type: ApplicationCommandOptionType) {\n\t\tsuper();\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Marks the option as required\n\t * @param required If this option should be required\n\t */\n\tpublic setRequired(required: boolean) {\n\t\t// Assert that you actually passed a boolean\n\t\tow(required, 'required', ow.boolean);\n\n\t\tthis.required = required;\n\n\t\treturn this;\n\t}\n\n\tpublic toJSON() {\n\t\tvalidateRequiredParameters(this.name, this.description, []);\n\n\t\t// Assert that you actually passed a boolean\n\t\tow(this.required, 'required', ow.boolean);\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\trequired: this.required,\n\t\t};\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}