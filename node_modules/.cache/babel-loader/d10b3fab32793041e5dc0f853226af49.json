{"ast":null,"code":"'use strict';\n\nconst {\n  PartialTypes\n} = require('../../util/Constants');\n/*\n\nABOUT ACTIONS\n\nActions are similar to WebSocket Packet Handlers, but since introducing\nthe REST API methods, in order to prevent rewriting code to handle data,\n\"actions\" have been introduced. They're basically what Packet Handlers\nused to be but they're strictly for manipulating data and making sure\nthat WebSocket events don't clash with REST methods.\n\n*/\n\n\nclass GenericAction {\n  constructor(client) {\n    this.client = client;\n  }\n\n  handle(data) {\n    return data;\n  }\n\n  getPayload(data, manager, id, partialType, cache) {\n    const existing = manager.cache.get(id);\n\n    if (!existing && this.client.options.partials.includes(partialType)) {\n      return manager._add(data, cache);\n    }\n\n    return existing;\n  }\n\n  getChannel(data) {\n    const id = data.channel_id ?? data.id;\n    return data.channel ?? this.getPayload({\n      id,\n      guild_id: data.guild_id,\n      recipients: [data.author ?? data.user ?? {\n        id: data.user_id\n      }]\n    }, this.client.channels, id, PartialTypes.CHANNEL);\n  }\n\n  getMessage(data, channel, cache) {\n    const id = data.message_id ?? data.id;\n    return data.message ?? this.getPayload({\n      id,\n      channel_id: channel.id,\n      guild_id: data.guild_id ?? channel.guild?.id\n    }, channel.messages, id, PartialTypes.MESSAGE, cache);\n  }\n\n  getReaction(data, message, user) {\n    const id = data.emoji.id ?? decodeURIComponent(data.emoji.name);\n    return this.getPayload({\n      emoji: data.emoji,\n      count: message.partial ? null : 0,\n      me: user?.id === this.client.user.id\n    }, message.reactions, id, PartialTypes.REACTION);\n  }\n\n  getMember(data, guild) {\n    return this.getPayload(data, guild.members, data.user.id, PartialTypes.GUILD_MEMBER);\n  }\n\n  getUser(data) {\n    const id = data.user_id;\n    return data.user ?? this.getPayload({\n      id\n    }, this.client.users, id, PartialTypes.USER);\n  }\n\n  getUserFromMember(data) {\n    if (data.guild_id && data.member?.user) {\n      const guild = this.client.guilds.cache.get(data.guild_id);\n\n      if (guild) {\n        return guild.members._add(data.member).user;\n      } else {\n        return this.client.users._add(data.member.user);\n      }\n    }\n\n    return this.getUser(data);\n  }\n\n}\n\nmodule.exports = GenericAction;","map":{"version":3,"names":["PartialTypes","require","GenericAction","constructor","client","handle","data","getPayload","manager","id","partialType","cache","existing","get","options","partials","includes","_add","getChannel","channel_id","channel","guild_id","recipients","author","user","user_id","channels","CHANNEL","getMessage","message_id","message","guild","messages","MESSAGE","getReaction","emoji","decodeURIComponent","name","count","partial","me","reactions","REACTION","getMember","members","GUILD_MEMBER","getUser","users","USER","getUserFromMember","member","guilds","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/Action.js"],"sourcesContent":["'use strict';\n\nconst { PartialTypes } = require('../../util/Constants');\n\n/*\n\nABOUT ACTIONS\n\nActions are similar to WebSocket Packet Handlers, but since introducing\nthe REST API methods, in order to prevent rewriting code to handle data,\n\"actions\" have been introduced. They're basically what Packet Handlers\nused to be but they're strictly for manipulating data and making sure\nthat WebSocket events don't clash with REST methods.\n\n*/\n\nclass GenericAction {\n  constructor(client) {\n    this.client = client;\n  }\n\n  handle(data) {\n    return data;\n  }\n\n  getPayload(data, manager, id, partialType, cache) {\n    const existing = manager.cache.get(id);\n    if (!existing && this.client.options.partials.includes(partialType)) {\n      return manager._add(data, cache);\n    }\n    return existing;\n  }\n\n  getChannel(data) {\n    const id = data.channel_id ?? data.id;\n    return (\n      data.channel ??\n      this.getPayload(\n        {\n          id,\n          guild_id: data.guild_id,\n          recipients: [data.author ?? data.user ?? { id: data.user_id }],\n        },\n        this.client.channels,\n        id,\n        PartialTypes.CHANNEL,\n      )\n    );\n  }\n\n  getMessage(data, channel, cache) {\n    const id = data.message_id ?? data.id;\n    return (\n      data.message ??\n      this.getPayload(\n        {\n          id,\n          channel_id: channel.id,\n          guild_id: data.guild_id ?? channel.guild?.id,\n        },\n        channel.messages,\n        id,\n        PartialTypes.MESSAGE,\n        cache,\n      )\n    );\n  }\n\n  getReaction(data, message, user) {\n    const id = data.emoji.id ?? decodeURIComponent(data.emoji.name);\n    return this.getPayload(\n      {\n        emoji: data.emoji,\n        count: message.partial ? null : 0,\n        me: user?.id === this.client.user.id,\n      },\n      message.reactions,\n      id,\n      PartialTypes.REACTION,\n    );\n  }\n\n  getMember(data, guild) {\n    return this.getPayload(data, guild.members, data.user.id, PartialTypes.GUILD_MEMBER);\n  }\n\n  getUser(data) {\n    const id = data.user_id;\n    return data.user ?? this.getPayload({ id }, this.client.users, id, PartialTypes.USER);\n  }\n\n  getUserFromMember(data) {\n    if (data.guild_id && data.member?.user) {\n      const guild = this.client.guilds.cache.get(data.guild_id);\n      if (guild) {\n        return guild.members._add(data.member).user;\n      } else {\n        return this.client.users._add(data.member.user);\n      }\n    }\n    return this.getUser(data);\n  }\n}\n\nmodule.exports = GenericAction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}