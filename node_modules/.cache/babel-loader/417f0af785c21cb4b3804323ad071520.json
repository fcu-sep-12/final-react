{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SharedNameAndDescription = void 0;\n\nconst Assertions_1 = require(\"../Assertions\");\n\nclass SharedNameAndDescription {\n  constructor() {\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  /**\n   * Sets the name\n   * @param name The name\n   */\n\n\n  setName(name) {\n    // Assert the name matches the conditions\n    Assertions_1.validateName(name);\n    Reflect.set(this, 'name', name);\n    return this;\n  }\n  /**\n   * Sets the description\n   * @param description The description\n   */\n\n\n  setDescription(description) {\n    // Assert the description matches the conditions\n    Assertions_1.validateDescription(description);\n    Reflect.set(this, 'description', description);\n    return this;\n  }\n\n}\n\nexports.SharedNameAndDescription = SharedNameAndDescription;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,wBAAb,CAAqC;EAArCC;IACCC;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;;IAAA;EA2BA;EAzBA;;;;;;EAIOC,OAAO,CAACC,IAAD,EAAa;IAC1B;IACAC,0BAAaD,IAAb;IAEAE,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,MAAlB,EAA0BH,IAA1B;IAEA,OAAO,IAAP;EACA;EAED;;;;;;EAIOI,cAAc,CAACC,WAAD,EAAoB;IACxC;IACAJ,iCAAoBI,WAApB;IAEAH,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,aAAlB,EAAiCE,WAAjC;IAEA,OAAO,IAAP;EACA;;AA5BmC;;AAArCC","names":["SharedNameAndDescription","constructor","Object","setName","name","Assertions_1","Reflect","set","setDescription","description","exports"],"sources":["\\interactions\\slashCommands\\mixins\\NameAndDescription.ts"],"sourcesContent":["import { validateDescription, validateName } from '../Assertions';\n\nexport class SharedNameAndDescription {\n\tpublic readonly name!: string;\n\tpublic readonly description!: string;\n\n\t/**\n\t * Sets the name\n\t * @param name The name\n\t */\n\tpublic setName(name: string) {\n\t\t// Assert the name matches the conditions\n\t\tvalidateName(name);\n\n\t\tReflect.set(this, 'name', name);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the description\n\t * @param description The description\n\t */\n\tpublic setDescription(description: string) {\n\t\t// Assert the description matches the conditions\n\t\tvalidateDescription(description);\n\n\t\tReflect.set(this, 'description', description);\n\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}