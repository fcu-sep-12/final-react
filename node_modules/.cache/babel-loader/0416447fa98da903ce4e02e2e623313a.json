{"ast":null,"code":"'use strict';\n\nconst BitField = require('./BitField');\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\n\n\nclass UserFlags extends BitField {}\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name UserFlags#bitfield\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `DISCORD_CERTIFIED_MODERATOR`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\n\n\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_BOT_DEVELOPER: 1 << 17,\n  DISCORD_CERTIFIED_MODERATOR: 1 << 18\n};\nmodule.exports = UserFlags;","map":{"version":3,"names":["BitField","require","UserFlags","FLAGS","DISCORD_EMPLOYEE","PARTNERED_SERVER_OWNER","HYPESQUAD_EVENTS","BUGHUNTER_LEVEL_1","HOUSE_BRAVERY","HOUSE_BRILLIANCE","HOUSE_BALANCE","EARLY_SUPPORTER","TEAM_USER","BUGHUNTER_LEVEL_2","VERIFIED_BOT","EARLY_VERIFIED_BOT_DEVELOPER","DISCORD_CERTIFIED_MODERATOR","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/util/UserFlags.js"],"sourcesContent":["'use strict';\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlags extends BitField {}\n\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Bitfield of the packed bits\n * @type {number}\n * @name UserFlags#bitfield\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `DISCORD_CERTIFIED_MODERATOR`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_BOT_DEVELOPER: 1 << 17,\n  DISCORD_CERTIFIED_MODERATOR: 1 << 18,\n};\n\nmodule.exports = UserFlags;\n"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,SAAN,SAAwBF,QAAxB,CAAiC;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,SAAS,CAACC,KAAV,GAAkB;EAChBC,gBAAgB,EAAE,KAAK,CADP;EAEhBC,sBAAsB,EAAE,KAAK,CAFb;EAGhBC,gBAAgB,EAAE,KAAK,CAHP;EAIhBC,iBAAiB,EAAE,KAAK,CAJR;EAKhBC,aAAa,EAAE,KAAK,CALJ;EAMhBC,gBAAgB,EAAE,KAAK,CANP;EAOhBC,aAAa,EAAE,KAAK,CAPJ;EAQhBC,eAAe,EAAE,KAAK,CARN;EAShBC,SAAS,EAAE,KAAK,EATA;EAUhBC,iBAAiB,EAAE,KAAK,EAVR;EAWhBC,YAAY,EAAE,KAAK,EAXH;EAYhBC,4BAA4B,EAAE,KAAK,EAZnB;EAahBC,2BAA2B,EAAE,KAAK;AAblB,CAAlB;AAgBAC,MAAM,CAACC,OAAP,GAAiBhB,SAAjB"},"metadata":{},"sourceType":"script"}