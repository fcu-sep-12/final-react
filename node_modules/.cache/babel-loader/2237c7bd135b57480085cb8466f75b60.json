{"ast":null,"code":"\"use strict\";\n/**\r\n * Types extracted from https://discord.com/developers/docs/resources/channel\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonStyle = exports.ComponentType = exports.AllowedMentionsTypes = exports.EmbedType = exports.ThreadMemberFlags = exports.ThreadAutoArchiveDuration = exports.OverwriteType = exports.MessageFlags = exports.MessageActivityType = exports.MessageType = exports.VideoQualityMode = exports.ChannelType = void 0;\n/**\r\n * https://discord.com/developers/docs/resources/channel#channel-object-channel-types\r\n */\n\nvar ChannelType;\n\n(function (ChannelType) {\n  /**\r\n   * A text channel within a guild\r\n   */\n  ChannelType[ChannelType[\"GuildText\"] = 0] = \"GuildText\";\n  /**\r\n   * A direct message between users\r\n   */\n\n  ChannelType[ChannelType[\"DM\"] = 1] = \"DM\";\n  /**\r\n   * A voice channel within a guild\r\n   */\n\n  ChannelType[ChannelType[\"GuildVoice\"] = 2] = \"GuildVoice\";\n  /**\r\n   * A direct message between multiple users\r\n   */\n\n  ChannelType[ChannelType[\"GroupDM\"] = 3] = \"GroupDM\";\n  /**\r\n   * An organizational category that contains up to 50 channels\r\n   *\r\n   * See https://support.discord.com/hc/en-us/articles/115001580171-Channel-Categories-101\r\n   */\n\n  ChannelType[ChannelType[\"GuildCategory\"] = 4] = \"GuildCategory\";\n  /**\r\n   * A channel that users can follow and crosspost into their own guild\r\n   *\r\n   * See https://support.discord.com/hc/en-us/articles/360032008192\r\n   */\n\n  ChannelType[ChannelType[\"GuildNews\"] = 5] = \"GuildNews\";\n  /**\r\n   * A channel in which game developers can sell their game on Discord\r\n   *\r\n   * See https://discord.com/developers/docs/game-and-server-management/special-channels\r\n   */\n\n  ChannelType[ChannelType[\"GuildStore\"] = 6] = \"GuildStore\";\n  /**\r\n   * A thread channel (public) within a Guild News channel\r\n   */\n\n  ChannelType[ChannelType[\"GuildNewsThread\"] = 10] = \"GuildNewsThread\";\n  /**\r\n   * A public thread channel within a Guild Text channel\r\n   */\n\n  ChannelType[ChannelType[\"GuildPublicThread\"] = 11] = \"GuildPublicThread\";\n  /**\r\n   * A private thread channel within a Guild Text channel\r\n   */\n\n  ChannelType[ChannelType[\"GuildPrivateThread\"] = 12] = \"GuildPrivateThread\";\n  /**\r\n   * A voice channel for hosting events with an audience\r\n   *\r\n   * See https://support.discord.com/hc/en-us/articles/1500005513722\r\n   */\n\n  ChannelType[ChannelType[\"GuildStageVoice\"] = 13] = \"GuildStageVoice\";\n})(ChannelType = exports.ChannelType || (exports.ChannelType = {}));\n\nvar VideoQualityMode;\n\n(function (VideoQualityMode) {\n  /**\r\n   * Discord chooses the quality for optimal performance\r\n   */\n  VideoQualityMode[VideoQualityMode[\"Auto\"] = 1] = \"Auto\";\n  /**\r\n   * 720p\r\n   */\n\n  VideoQualityMode[VideoQualityMode[\"Full\"] = 2] = \"Full\";\n})(VideoQualityMode = exports.VideoQualityMode || (exports.VideoQualityMode = {}));\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-types\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[MessageType[\"Default\"] = 0] = \"Default\";\n  MessageType[MessageType[\"RecipientAdd\"] = 1] = \"RecipientAdd\";\n  MessageType[MessageType[\"RecipientRemove\"] = 2] = \"RecipientRemove\";\n  MessageType[MessageType[\"Call\"] = 3] = \"Call\";\n  MessageType[MessageType[\"ChannelNameChange\"] = 4] = \"ChannelNameChange\";\n  MessageType[MessageType[\"ChannelIconChange\"] = 5] = \"ChannelIconChange\";\n  MessageType[MessageType[\"ChannelPinnedMessage\"] = 6] = \"ChannelPinnedMessage\";\n  MessageType[MessageType[\"GuildMemberJoin\"] = 7] = \"GuildMemberJoin\";\n  MessageType[MessageType[\"UserPremiumGuildSubscription\"] = 8] = \"UserPremiumGuildSubscription\";\n  MessageType[MessageType[\"UserPremiumGuildSubscriptionTier1\"] = 9] = \"UserPremiumGuildSubscriptionTier1\";\n  MessageType[MessageType[\"UserPremiumGuildSubscriptionTier2\"] = 10] = \"UserPremiumGuildSubscriptionTier2\";\n  MessageType[MessageType[\"UserPremiumGuildSubscriptionTier3\"] = 11] = \"UserPremiumGuildSubscriptionTier3\";\n  MessageType[MessageType[\"ChannelFollowAdd\"] = 12] = \"ChannelFollowAdd\";\n  MessageType[MessageType[\"GuildDiscoveryDisqualified\"] = 14] = \"GuildDiscoveryDisqualified\";\n  MessageType[MessageType[\"GuildDiscoveryRequalified\"] = 15] = \"GuildDiscoveryRequalified\";\n  MessageType[MessageType[\"GuildDiscoveryGracePeriodInitialWarning\"] = 16] = \"GuildDiscoveryGracePeriodInitialWarning\";\n  MessageType[MessageType[\"GuildDiscoveryGracePeriodFinalWarning\"] = 17] = \"GuildDiscoveryGracePeriodFinalWarning\";\n  MessageType[MessageType[\"ThreadCreated\"] = 18] = \"ThreadCreated\";\n  MessageType[MessageType[\"Reply\"] = 19] = \"Reply\";\n  MessageType[MessageType[\"ApplicationCommand\"] = 20] = \"ApplicationCommand\";\n  MessageType[MessageType[\"ThreadStarterMessage\"] = 21] = \"ThreadStarterMessage\";\n  MessageType[MessageType[\"GuildInviteReminder\"] = 22] = \"GuildInviteReminder\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-activity-types\r\n */\n\n\nvar MessageActivityType;\n\n(function (MessageActivityType) {\n  MessageActivityType[MessageActivityType[\"Join\"] = 1] = \"Join\";\n  MessageActivityType[MessageActivityType[\"Spectate\"] = 2] = \"Spectate\";\n  MessageActivityType[MessageActivityType[\"Listen\"] = 3] = \"Listen\";\n  MessageActivityType[MessageActivityType[\"JoinRequest\"] = 5] = \"JoinRequest\";\n})(MessageActivityType = exports.MessageActivityType || (exports.MessageActivityType = {}));\n/**\r\n * https://discord.com/developers/docs/resources/channel#message-object-message-flags\r\n */\n\n\nvar MessageFlags;\n\n(function (MessageFlags) {\n  /**\r\n   * This message has been published to subscribed channels (via Channel Following)\r\n   */\n  MessageFlags[MessageFlags[\"Crossposted\"] = 1] = \"Crossposted\";\n  /**\r\n   * This message originated from a message in another channel (via Channel Following)\r\n   */\n\n  MessageFlags[MessageFlags[\"IsCrosspost\"] = 2] = \"IsCrosspost\";\n  /**\r\n   * Do not include any embeds when serializing this message\r\n   */\n\n  MessageFlags[MessageFlags[\"SuppressEmbeds\"] = 4] = \"SuppressEmbeds\";\n  /**\r\n   * The source message for this crosspost has been deleted (via Channel Following)\r\n   */\n\n  MessageFlags[MessageFlags[\"SourceMessageDeleted\"] = 8] = \"SourceMessageDeleted\";\n  /**\r\n   * This message came from the urgent message system\r\n   */\n\n  MessageFlags[MessageFlags[\"Urgent\"] = 16] = \"Urgent\";\n  /**\r\n   * This message has an associated thread, which shares its id\r\n   */\n\n  MessageFlags[MessageFlags[\"HasThread\"] = 32] = \"HasThread\";\n  /**\r\n   * This message is only visible to the user who invoked the Interaction\r\n   */\n\n  MessageFlags[MessageFlags[\"Ephemeral\"] = 64] = \"Ephemeral\";\n  /**\r\n   * This message is an Interaction Response and the bot is \"thinking\"\r\n   */\n\n  MessageFlags[MessageFlags[\"Loading\"] = 128] = \"Loading\";\n})(MessageFlags = exports.MessageFlags || (exports.MessageFlags = {}));\n\nvar OverwriteType;\n\n(function (OverwriteType) {\n  OverwriteType[OverwriteType[\"Role\"] = 0] = \"Role\";\n  OverwriteType[OverwriteType[\"Member\"] = 1] = \"Member\";\n})(OverwriteType = exports.OverwriteType || (exports.OverwriteType = {}));\n\nvar ThreadAutoArchiveDuration;\n\n(function (ThreadAutoArchiveDuration) {\n  ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneHour\"] = 60] = \"OneHour\";\n  ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneDay\"] = 1440] = \"OneDay\";\n  ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"ThreeDays\"] = 4320] = \"ThreeDays\";\n  ThreadAutoArchiveDuration[ThreadAutoArchiveDuration[\"OneWeek\"] = 10080] = \"OneWeek\";\n})(ThreadAutoArchiveDuration = exports.ThreadAutoArchiveDuration || (exports.ThreadAutoArchiveDuration = {}));\n\nvar ThreadMemberFlags;\n\n(function (ThreadMemberFlags) {})(ThreadMemberFlags = exports.ThreadMemberFlags || (exports.ThreadMemberFlags = {}));\n/**\r\n * https://discord.com/developers/docs/resources/channel#embed-object-embed-types\r\n * @deprecated *Embed types should be considered deprecated and might be removed in a future API version*\r\n */\n\n\nvar EmbedType;\n\n(function (EmbedType) {\n  /**\r\n   * Generic embed rendered from embed attributes\r\n   */\n  EmbedType[\"Rich\"] = \"rich\";\n  /**\r\n   * Image embed\r\n   */\n\n  EmbedType[\"Image\"] = \"image\";\n  /**\r\n   * Video embed\r\n   */\n\n  EmbedType[\"Video\"] = \"video\";\n  /**\r\n   * Animated gif image embed rendered as a video embed\r\n   */\n\n  EmbedType[\"GIFV\"] = \"gifv\";\n  /**\r\n   * Article embed\r\n   */\n\n  EmbedType[\"Article\"] = \"article\";\n  /**\r\n   * Link embed\r\n   */\n\n  EmbedType[\"Link\"] = \"link\";\n})(EmbedType = exports.EmbedType || (exports.EmbedType = {}));\n/**\r\n * https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types\r\n */\n\n\nvar AllowedMentionsTypes;\n\n(function (AllowedMentionsTypes) {\n  /**\r\n   * Controls @everyone and @here mentions\r\n   */\n  AllowedMentionsTypes[\"Everyone\"] = \"everyone\";\n  /**\r\n   * Controls role mentions\r\n   */\n\n  AllowedMentionsTypes[\"Role\"] = \"roles\";\n  /**\r\n   * Controls user mentions\r\n   */\n\n  AllowedMentionsTypes[\"User\"] = \"users\";\n})(AllowedMentionsTypes = exports.AllowedMentionsTypes || (exports.AllowedMentionsTypes = {}));\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#component-types\r\n */\n\n\nvar ComponentType;\n\n(function (ComponentType) {\n  /**\r\n   * Action Row component\r\n   */\n  ComponentType[ComponentType[\"ActionRow\"] = 1] = \"ActionRow\";\n  /**\r\n   * Button component\r\n   */\n\n  ComponentType[ComponentType[\"Button\"] = 2] = \"Button\";\n  /**\r\n   * Select Menu component\r\n   */\n\n  ComponentType[ComponentType[\"SelectMenu\"] = 3] = \"SelectMenu\";\n})(ComponentType = exports.ComponentType || (exports.ComponentType = {}));\n/**\r\n * https://discord.com/developers/docs/interactions/message-components#button-object-button-styles\r\n */\n\n\nvar ButtonStyle;\n\n(function (ButtonStyle) {\n  ButtonStyle[ButtonStyle[\"Primary\"] = 1] = \"Primary\";\n  ButtonStyle[ButtonStyle[\"Secondary\"] = 2] = \"Secondary\";\n  ButtonStyle[ButtonStyle[\"Success\"] = 3] = \"Success\";\n  ButtonStyle[ButtonStyle[\"Danger\"] = 4] = \"Danger\";\n  ButtonStyle[ButtonStyle[\"Link\"] = 5] = \"Link\";\n})(ButtonStyle = exports.ButtonStyle || (exports.ButtonStyle = {}));","map":{"version":3,"mappings":";AAAA;;;;;;;;AAkJA;;;;AAGA,IAAkBA,WAAlB;;AAAA,WAAkBA,WAAlB,EAA6B;EAC5B;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;;;EAKAA;EACA;;;;;;EAKAA;EACA;;;;;;EAKAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;;;EAKAA;AACA,CArDD,EAAkBA,WAAW,GAAXC,8CAAW,EAAX,CAAlB;;AAuDA,IAAkBC,gBAAlB;;AAAA,WAAkBA,gBAAlB,EAAkC;EACjC;;;EAGAA;EACA;;;;EAGAA;AACA,CATD,EAAkBA,gBAAgB,GAAhBD,wDAAgB,EAAhB,CAAlB;AA2MA;;;;;AAGA,IAAkBE,WAAlB;;AAAA,WAAkBA,WAAlB,EAA6B;EAC5BA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACA,CAvBD,EAAkBA,WAAW,GAAXF,8CAAW,EAAX,CAAlB;AA6DA;;;;;AAGA,IAAkBG,mBAAlB;;AAAA,WAAkBA,mBAAlB,EAAqC;EACpCA;EACAA;EACAA;EACAA;AACA,CALD,EAAkBA,mBAAmB,GAAnBH,8DAAmB,EAAnB,CAAlB;AAOA;;;;;AAGA,IAAkBI,YAAlB;;AAAA,WAAkBA,YAAlB,EAA8B;EAC7B;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;AACA,CAjCD,EAAkBA,YAAY,GAAZJ,gDAAY,EAAZ,CAAlB;;AAqGA,IAAkBK,aAAlB;;AAAA,WAAkBA,aAAlB,EAA+B;EAC9BA;EACAA;AACA,CAHD,EAAkBA,aAAa,GAAbL,kDAAa,EAAb,CAAlB;;AA2BA,IAAkBM,yBAAlB;;AAAA,WAAkBA,yBAAlB,EAA2C;EAC1CA;EACAA;EACAA;EACAA;AACA,CALD,EAAkBA,yBAAyB,GAAzBN,0EAAyB,EAAzB,CAAlB;;AAmCA,IAAkBO,iBAAlB;;AAAA,WAAkBA,iBAAlB,EAAmC,CAAG,CAAtC,EAAkBA,iBAAiB,GAAjBP,0DAAiB,EAAjB,CAAlB;AAqGA;;;;;;AAIA,IAAkBQ,SAAlB;;AAAA,WAAkBA,SAAlB,EAA2B;EAC1B;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;AACA,CAzBD,EAAkBA,SAAS,GAATR,0CAAS,EAAT,CAAlB;AAyOA;;;;;AAGA,IAAkBS,oBAAlB;;AAAA,WAAkBA,oBAAlB,EAAsC;EACrC;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;AACA,CAbD,EAAkBA,oBAAoB,GAApBT,gEAAoB,EAApB,CAAlB;AAmDA;;;;;AAGA,IAAkBU,aAAlB;;AAAA,WAAkBA,aAAlB,EAA+B;EAC9B;;;EAGAA;EACA;;;;EAGAA;EACA;;;;EAGAA;AACA,CAbD,EAAkBA,aAAa,GAAbV,kDAAa,EAAb,CAAlB;AAiFA;;;;;AAGA,IAAkBW,WAAlB;;AAAA,WAAkBA,WAAlB,EAA6B;EAC5BA;EACAA;EACAA;EACAA;EACAA;AACA,CAND,EAAkBA,WAAW,GAAXX,8CAAW,EAAX,CAAlB","names":["ChannelType","exports","VideoQualityMode","MessageType","MessageActivityType","MessageFlags","OverwriteType","ThreadAutoArchiveDuration","ThreadMemberFlags","EmbedType","AllowedMentionsTypes","ComponentType","ButtonStyle"],"sources":["channel.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}