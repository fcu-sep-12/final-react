{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\n\nconst APIRequest = require('./APIRequest');\n\nconst routeBuilder = require('./APIRouter');\n\nconst RequestHandler = require('./RequestHandler');\n\nconst {\n  Error\n} = require('../errors');\n\nconst {\n  Endpoints\n} = require('../util/Constants');\n\nclass RESTManager {\n  constructor(client) {\n    let tokenPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Bot';\n    this.client = client;\n    this.handlers = new Collection();\n    this.tokenPrefix = tokenPrefix;\n    this.versioned = true;\n    this.globalLimit = client.options.restGlobalRateLimit > 0 ? client.options.restGlobalRateLimit : Infinity;\n    this.globalRemaining = this.globalLimit;\n    this.globalReset = null;\n    this.globalDelay = null;\n\n    if (client.options.restSweepInterval > 0) {\n      this.sweepInterval = setInterval(() => {\n        this.handlers.sweep(handler => handler._inactive);\n      }, client.options.restSweepInterval * 1000).unref();\n    }\n  }\n\n  get api() {\n    return routeBuilder(this);\n  }\n\n  getAuth() {\n    const token = this.client.token ?? this.client.accessToken;\n    if (token) return `${this.tokenPrefix} ${token}`;\n    throw new Error('TOKEN_MISSING');\n  }\n\n  get cdn() {\n    return Endpoints.CDN(this.client.options.http.cdn);\n  }\n\n  request(method, url) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const apiRequest = new APIRequest(this, method, url, options);\n    let handler = this.handlers.get(apiRequest.route);\n\n    if (!handler) {\n      handler = new RequestHandler(this);\n      this.handlers.set(apiRequest.route, handler);\n    }\n\n    return handler.push(apiRequest);\n  }\n\n  get endpoint() {\n    return this.client.options.http.api;\n  }\n\n  set endpoint(endpoint) {\n    this.client.options.http.api = endpoint;\n  }\n\n}\n\nmodule.exports = RESTManager;","map":{"version":3,"names":["Collection","require","APIRequest","routeBuilder","RequestHandler","Error","Endpoints","RESTManager","constructor","client","tokenPrefix","handlers","versioned","globalLimit","options","restGlobalRateLimit","Infinity","globalRemaining","globalReset","globalDelay","restSweepInterval","sweepInterval","setInterval","sweep","handler","_inactive","unref","api","getAuth","token","accessToken","cdn","CDN","http","request","method","url","apiRequest","get","route","set","push","endpoint","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/rest/RESTManager.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst APIRequest = require('./APIRequest');\nconst routeBuilder = require('./APIRouter');\nconst RequestHandler = require('./RequestHandler');\nconst { Error } = require('../errors');\nconst { Endpoints } = require('../util/Constants');\n\nclass RESTManager {\n  constructor(client, tokenPrefix = 'Bot') {\n    this.client = client;\n    this.handlers = new Collection();\n    this.tokenPrefix = tokenPrefix;\n    this.versioned = true;\n    this.globalLimit = client.options.restGlobalRateLimit > 0 ? client.options.restGlobalRateLimit : Infinity;\n    this.globalRemaining = this.globalLimit;\n    this.globalReset = null;\n    this.globalDelay = null;\n    if (client.options.restSweepInterval > 0) {\n      this.sweepInterval = setInterval(() => {\n        this.handlers.sweep(handler => handler._inactive);\n      }, client.options.restSweepInterval * 1000).unref();\n    }\n  }\n\n  get api() {\n    return routeBuilder(this);\n  }\n\n  getAuth() {\n    const token = this.client.token ?? this.client.accessToken;\n    if (token) return `${this.tokenPrefix} ${token}`;\n    throw new Error('TOKEN_MISSING');\n  }\n\n  get cdn() {\n    return Endpoints.CDN(this.client.options.http.cdn);\n  }\n\n  request(method, url, options = {}) {\n    const apiRequest = new APIRequest(this, method, url, options);\n    let handler = this.handlers.get(apiRequest.route);\n\n    if (!handler) {\n      handler = new RequestHandler(this);\n      this.handlers.set(apiRequest.route, handler);\n    }\n\n    return handler.push(apiRequest);\n  }\n\n  get endpoint() {\n    return this.client.options.http.api;\n  }\n\n  set endpoint(endpoint) {\n    this.client.options.http.api = endpoint;\n  }\n}\n\nmodule.exports = RESTManager;\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,uBAAD,CAA9B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,aAAD,CAA5B;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA9B;;AACA,MAAM;EAAEI;AAAF,IAAYJ,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAM;EAAEK;AAAF,IAAgBL,OAAO,CAAC,mBAAD,CAA7B;;AAEA,MAAMM,WAAN,CAAkB;EAChBC,WAAW,CAACC,MAAD,EAA8B;IAAA,IAArBC,WAAqB,uEAAP,KAAO;IACvC,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKE,QAAL,GAAgB,IAAIX,UAAJ,EAAhB;IACA,KAAKU,WAAL,GAAmBA,WAAnB;IACA,KAAKE,SAAL,GAAiB,IAAjB;IACA,KAAKC,WAAL,GAAmBJ,MAAM,CAACK,OAAP,CAAeC,mBAAf,GAAqC,CAArC,GAAyCN,MAAM,CAACK,OAAP,CAAeC,mBAAxD,GAA8EC,QAAjG;IACA,KAAKC,eAAL,GAAuB,KAAKJ,WAA5B;IACA,KAAKK,WAAL,GAAmB,IAAnB;IACA,KAAKC,WAAL,GAAmB,IAAnB;;IACA,IAAIV,MAAM,CAACK,OAAP,CAAeM,iBAAf,GAAmC,CAAvC,EAA0C;MACxC,KAAKC,aAAL,GAAqBC,WAAW,CAAC,MAAM;QACrC,KAAKX,QAAL,CAAcY,KAAd,CAAoBC,OAAO,IAAIA,OAAO,CAACC,SAAvC;MACD,CAF+B,EAE7BhB,MAAM,CAACK,OAAP,CAAeM,iBAAf,GAAmC,IAFN,CAAX,CAEuBM,KAFvB,EAArB;IAGD;EACF;;EAEM,IAAHC,GAAG,GAAG;IACR,OAAOxB,YAAY,CAAC,IAAD,CAAnB;EACD;;EAEDyB,OAAO,GAAG;IACR,MAAMC,KAAK,GAAG,KAAKpB,MAAL,CAAYoB,KAAZ,IAAqB,KAAKpB,MAAL,CAAYqB,WAA/C;IACA,IAAID,KAAJ,EAAW,OAAQ,GAAE,KAAKnB,WAAY,IAAGmB,KAAM,EAApC;IACX,MAAM,IAAIxB,KAAJ,CAAU,eAAV,CAAN;EACD;;EAEM,IAAH0B,GAAG,GAAG;IACR,OAAOzB,SAAS,CAAC0B,GAAV,CAAc,KAAKvB,MAAL,CAAYK,OAAZ,CAAoBmB,IAApB,CAAyBF,GAAvC,CAAP;EACD;;EAEDG,OAAO,CAACC,MAAD,EAASC,GAAT,EAA4B;IAAA,IAAdtB,OAAc,uEAAJ,EAAI;IACjC,MAAMuB,UAAU,GAAG,IAAInC,UAAJ,CAAe,IAAf,EAAqBiC,MAArB,EAA6BC,GAA7B,EAAkCtB,OAAlC,CAAnB;IACA,IAAIU,OAAO,GAAG,KAAKb,QAAL,CAAc2B,GAAd,CAAkBD,UAAU,CAACE,KAA7B,CAAd;;IAEA,IAAI,CAACf,OAAL,EAAc;MACZA,OAAO,GAAG,IAAIpB,cAAJ,CAAmB,IAAnB,CAAV;MACA,KAAKO,QAAL,CAAc6B,GAAd,CAAkBH,UAAU,CAACE,KAA7B,EAAoCf,OAApC;IACD;;IAED,OAAOA,OAAO,CAACiB,IAAR,CAAaJ,UAAb,CAAP;EACD;;EAEW,IAARK,QAAQ,GAAG;IACb,OAAO,KAAKjC,MAAL,CAAYK,OAAZ,CAAoBmB,IAApB,CAAyBN,GAAhC;EACD;;EAEW,IAARe,QAAQ,CAACA,QAAD,EAAW;IACrB,KAAKjC,MAAL,CAAYK,OAAZ,CAAoBmB,IAApB,CAAyBN,GAAzB,GAA+Be,QAA/B;EACD;;AAjDe;;AAoDlBC,MAAM,CAACC,OAAP,GAAiBrC,WAAjB"},"metadata":{},"sourceType":"script"}