{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n\nconst Emoji = require('./Emoji');\n/**\n * Represents a channel link in a guild's welcome screen.\n * @extends {Base}\n */\n\n\nclass WelcomeChannel extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n    /**\n     * The guild for this welcome channel\n     * @type {Guild|InviteGuild}\n     */\n\n    this.guild = guild;\n    /**\n     * The description of this welcome channel\n     * @type {string}\n     */\n\n    this.description = data.description;\n    /**\n     * The raw emoji data\n     * @type {Object}\n     * @private\n     */\n\n    this._emoji = {\n      name: data.emoji_name,\n      id: data.emoji_id\n    };\n    /**\n     * The id of this welcome channel\n     * @type {Snowflake}\n     */\n\n    this.channelId = data.channel_id;\n  }\n  /**\n   * The channel of this welcome channel\n   * @type {?(TextChannel|NewsChannel)}\n   */\n\n\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n  /**\n   * The emoji of this welcome channel\n   * @type {GuildEmoji|Emoji}\n   */\n\n\n  get emoji() {\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n\n}\n\nmodule.exports = WelcomeChannel;","map":{"version":3,"names":["Base","require","Emoji","WelcomeChannel","constructor","guild","data","client","description","_emoji","name","emoji_name","id","emoji_id","channelId","channel_id","channel","channels","resolve","emoji","emojis","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/WelcomeChannel.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\nconst Emoji = require('./Emoji');\n\n/**\n * Represents a channel link in a guild's welcome screen.\n * @extends {Base}\n */\nclass WelcomeChannel extends Base {\n  constructor(guild, data) {\n    super(guild.client);\n\n    /**\n     * The guild for this welcome channel\n     * @type {Guild|InviteGuild}\n     */\n    this.guild = guild;\n\n    /**\n     * The description of this welcome channel\n     * @type {string}\n     */\n    this.description = data.description;\n\n    /**\n     * The raw emoji data\n     * @type {Object}\n     * @private\n     */\n    this._emoji = {\n      name: data.emoji_name,\n      id: data.emoji_id,\n    };\n\n    /**\n     * The id of this welcome channel\n     * @type {Snowflake}\n     */\n    this.channelId = data.channel_id;\n  }\n\n  /**\n   * The channel of this welcome channel\n   * @type {?(TextChannel|NewsChannel)}\n   */\n  get channel() {\n    return this.client.channels.resolve(this.channelId);\n  }\n\n  /**\n   * The emoji of this welcome channel\n   * @type {GuildEmoji|Emoji}\n   */\n  get emoji() {\n    return this.client.emojis.resolve(this._emoji.id) ?? new Emoji(this.client, this._emoji);\n  }\n}\n\nmodule.exports = WelcomeChannel;\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;AACA;;;AACA,MAAME,cAAN,SAA6BH,IAA7B,CAAkC;EAChCI,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAc;IACvB,MAAMD,KAAK,CAACE,MAAZ;IAEA;AACJ;AACA;AACA;;IACI,KAAKF,KAAL,GAAaA,KAAb;IAEA;AACJ;AACA;AACA;;IACI,KAAKG,WAAL,GAAmBF,IAAI,CAACE,WAAxB;IAEA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,MAAL,GAAc;MACZC,IAAI,EAAEJ,IAAI,CAACK,UADC;MAEZC,EAAE,EAAEN,IAAI,CAACO;IAFG,CAAd;IAKA;AACJ;AACA;AACA;;IACI,KAAKC,SAAL,GAAiBR,IAAI,CAACS,UAAtB;EACD;EAED;AACF;AACA;AACA;;;EACa,IAAPC,OAAO,GAAG;IACZ,OAAO,KAAKT,MAAL,CAAYU,QAAZ,CAAqBC,OAArB,CAA6B,KAAKJ,SAAlC,CAAP;EACD;EAED;AACF;AACA;AACA;;;EACW,IAALK,KAAK,GAAG;IACV,OAAO,KAAKZ,MAAL,CAAYa,MAAZ,CAAmBF,OAAnB,CAA2B,KAAKT,MAAL,CAAYG,EAAvC,KAA8C,IAAIV,KAAJ,CAAU,KAAKK,MAAf,EAAuB,KAAKE,MAA5B,CAArD;EACD;;AA/C+B;;AAkDlCY,MAAM,CAACC,OAAP,GAAiBnB,cAAjB"},"metadata":{},"sourceType":"script"}