{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.not = void 0;\n\nconst random_id_1 = require(\"../utils/random-id\");\n\nconst predicate_1 = require(\"../predicates/predicate\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\n\n\nconst not = predicate => {\n  const originalAddValidator = predicate.addValidator;\n\n  predicate.addValidator = validator => {\n    const {\n      validator: fn,\n      message,\n      negatedMessage\n    } = validator;\n    const placeholder = random_id_1.default();\n\n    validator.message = (value, label) => negatedMessage ? negatedMessage(value, label) : message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label);\n\n    validator.validator = value => !fn(value);\n\n    predicate[predicate_1.validatorSymbol].push(validator);\n    predicate.addValidator = originalAddValidator;\n    return predicate;\n  };\n\n  return predicate;\n};\n\nexports.not = not;","map":{"version":3,"names":["Object","defineProperty","exports","value","not","random_id_1","require","predicate_1","predicate","originalAddValidator","addValidator","validator","fn","message","negatedMessage","placeholder","default","label","replace","validatorSymbol","push"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/operators/not.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.not = void 0;\nconst random_id_1 = require(\"../utils/random-id\");\nconst predicate_1 = require(\"../predicates/predicate\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nconst not = (predicate) => {\n    const originalAddValidator = predicate.addValidator;\n    predicate.addValidator = (validator) => {\n        const { validator: fn, message, negatedMessage } = validator;\n        const placeholder = random_id_1.default();\n        validator.message = (value, label) => (negatedMessage ?\n            negatedMessage(value, label) :\n            message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label));\n        validator.validator = (value) => !fn(value);\n        predicate[predicate_1.validatorSymbol].push(validator);\n        predicate.addValidator = originalAddValidator;\n        return predicate;\n    };\n    return predicate;\n};\nexports.not = not;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,GAAR,GAAc,KAAK,CAAnB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAD,CAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,GAAG,GAAII,SAAD,IAAe;EACvB,MAAMC,oBAAoB,GAAGD,SAAS,CAACE,YAAvC;;EACAF,SAAS,CAACE,YAAV,GAA0BC,SAAD,IAAe;IACpC,MAAM;MAAEA,SAAS,EAAEC,EAAb;MAAiBC,OAAjB;MAA0BC;IAA1B,IAA6CH,SAAnD;IACA,MAAMI,WAAW,GAAGV,WAAW,CAACW,OAAZ,EAApB;;IACAL,SAAS,CAACE,OAAV,GAAoB,CAACV,KAAD,EAAQc,KAAR,KAAmBH,cAAc,GACjDA,cAAc,CAACX,KAAD,EAAQc,KAAR,CADmC,GAEjDJ,OAAO,CAACV,KAAD,EAAQY,WAAR,CAAP,CAA4BG,OAA5B,CAAoC,MAApC,EAA4C,QAA5C,EAAsDA,OAAtD,CAA8DH,WAA9D,EAA2EE,KAA3E,CAFJ;;IAGAN,SAAS,CAACA,SAAV,GAAuBR,KAAD,IAAW,CAACS,EAAE,CAACT,KAAD,CAApC;;IACAK,SAAS,CAACD,WAAW,CAACY,eAAb,CAAT,CAAuCC,IAAvC,CAA4CT,SAA5C;IACAH,SAAS,CAACE,YAAV,GAAyBD,oBAAzB;IACA,OAAOD,SAAP;EACH,CAVD;;EAWA,OAAOA,SAAP;AACH,CAdD;;AAeAN,OAAO,CAACE,GAAR,GAAcA,GAAd"},"metadata":{},"sourceType":"script"}