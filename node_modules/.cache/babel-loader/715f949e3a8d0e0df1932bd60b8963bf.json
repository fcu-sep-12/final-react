{"ast":null,"code":"'use strict';\n\nconst Webhook = require('./Webhook');\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\n\n\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', {\n      value: client\n    });\n    this.id = id;\n    Object.defineProperty(this, 'token', {\n      value: token,\n      writable: true,\n      configurable: true\n    });\n  } // These are here only for documentation purposes - they are implemented by Webhook\n\n  /* eslint-disable no-empty-function, valid-jsdoc */\n\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n\n\n  send() {}\n\n  fetchMessage() {}\n\n  editMessage() {}\n\n  deleteMessage() {}\n\n  get url() {}\n\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\nmodule.exports = InteractionWebhook;","map":{"version":3,"names":["Webhook","require","InteractionWebhook","constructor","client","id","token","Object","defineProperty","value","writable","configurable","send","fetchMessage","editMessage","deleteMessage","url","applyToClass","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/InteractionWebhook.js"],"sourcesContent":["'use strict';\n\nconst Webhook = require('./Webhook');\n\n/**\n * Represents a webhook for an Interaction\n * @implements {Webhook}\n */\nclass InteractionWebhook {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Snowflake} id The application's id\n   * @param {string} token The interaction's token\n   */\n  constructor(client, id, token) {\n    /**\n     * The client that instantiated the interaction webhook\n     * @name InteractionWebhook#client\n     * @type {Client}\n     * @readonly\n     */\n    Object.defineProperty(this, 'client', { value: client });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n\n  // These are here only for documentation purposes - they are implemented by Webhook\n  /* eslint-disable no-empty-function, valid-jsdoc */\n  /**\n   * Sends a message with this webhook.\n   * @param {string|MessagePayload|InteractionReplyOptions} options The content for the reply\n   * @returns {Promise<Message|APIMessage>}\n   */\n  send() {}\n  fetchMessage() {}\n  editMessage() {}\n  deleteMessage() {}\n  get url() {}\n}\n\nWebhook.applyToClass(InteractionWebhook, ['sendSlackMessage', 'edit', 'delete', 'createdTimestamp', 'createdAt']);\n\nmodule.exports = InteractionWebhook;\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAN,CAAyB;EACvB;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACC,MAAD,EAASC,EAAT,EAAaC,KAAb,EAAoB;IAC7B;AACJ;AACA;AACA;AACA;AACA;IACIC,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;MAAEC,KAAK,EAAEL;IAAT,CAAtC;IACA,KAAKC,EAAL,GAAUA,EAAV;IACAE,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;MAAEC,KAAK,EAAEH,KAAT;MAAgBI,QAAQ,EAAE,IAA1B;MAAgCC,YAAY,EAAE;IAA9C,CAArC;EACD,CAhBsB,CAkBvB;;EACA;;EACA;AACF;AACA;AACA;AACA;;;EACEC,IAAI,GAAG,CAAE;;EACTC,YAAY,GAAG,CAAE;;EACjBC,WAAW,GAAG,CAAE;;EAChBC,aAAa,GAAG,CAAE;;EACX,IAAHC,GAAG,GAAG,CAAE;;AA7BW;;AAgCzBhB,OAAO,CAACiB,YAAR,CAAqBf,kBAArB,EAAyC,CAAC,kBAAD,EAAqB,MAArB,EAA6B,QAA7B,EAAuC,kBAAvC,EAA2D,WAA3D,CAAzC;AAEAgB,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB"},"metadata":{},"sourceType":"script"}