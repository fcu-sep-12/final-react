{"ast":null,"code":"'use strict';\n\nconst Emoji = require('./Emoji');\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n * @abstract\n */\n\n\nclass BaseGuildEmoji extends Emoji {\n  constructor(client, data, guild) {\n    super(client, data);\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n\n    this.guild = guild;\n    this.requiresColons = null;\n    this.managed = null;\n    this.available = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if (data.name) this.name = data.name;\n\n    if (typeof data.require_colons !== 'undefined') {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n\n    if (typeof data.managed !== 'undefined') {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if (typeof data.available !== 'undefined') {\n      /**\n       * Whether this emoji is available\n       * @type {?boolean}\n       */\n      this.available = data.available;\n    }\n  }\n\n}\n\nmodule.exports = BaseGuildEmoji;","map":{"version":3,"names":["Emoji","require","BaseGuildEmoji","constructor","client","data","guild","requiresColons","managed","available","_patch","name","require_colons","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/BaseGuildEmoji.js"],"sourcesContent":["'use strict';\n\nconst Emoji = require('./Emoji');\n\n/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n * @extends {Emoji}\n * @abstract\n */\nclass BaseGuildEmoji extends Emoji {\n  constructor(client, data, guild) {\n    super(client, data);\n\n    /**\n     * The guild this emoji is a part of\n     * @type {Guild|GuildPreview}\n     */\n    this.guild = guild;\n\n    this.requiresColons = null;\n    this.managed = null;\n    this.available = null;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    if (data.name) this.name = data.name;\n\n    if (typeof data.require_colons !== 'undefined') {\n      /**\n       * Whether or not this emoji requires colons surrounding it\n       * @type {?boolean}\n       */\n      this.requiresColons = data.require_colons;\n    }\n\n    if (typeof data.managed !== 'undefined') {\n      /**\n       * Whether this emoji is managed by an external service\n       * @type {?boolean}\n       */\n      this.managed = data.managed;\n    }\n\n    if (typeof data.available !== 'undefined') {\n      /**\n       * Whether this emoji is available\n       * @type {?boolean}\n       */\n      this.available = data.available;\n    }\n  }\n}\n\nmodule.exports = BaseGuildEmoji;\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAN,SAA6BF,KAA7B,CAAmC;EACjCG,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsB;IAC/B,MAAMF,MAAN,EAAcC,IAAd;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,KAAL,GAAaA,KAAb;IAEA,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,SAAL,GAAiB,IAAjB;;IAEA,KAAKC,MAAL,CAAYL,IAAZ;EACD;;EAEDK,MAAM,CAACL,IAAD,EAAO;IACX,IAAIA,IAAI,CAACM,IAAT,EAAe,KAAKA,IAAL,GAAYN,IAAI,CAACM,IAAjB;;IAEf,IAAI,OAAON,IAAI,CAACO,cAAZ,KAA+B,WAAnC,EAAgD;MAC9C;AACN;AACA;AACA;MACM,KAAKL,cAAL,GAAsBF,IAAI,CAACO,cAA3B;IACD;;IAED,IAAI,OAAOP,IAAI,CAACG,OAAZ,KAAwB,WAA5B,EAAyC;MACvC;AACN;AACA;AACA;MACM,KAAKA,OAAL,GAAeH,IAAI,CAACG,OAApB;IACD;;IAED,IAAI,OAAOH,IAAI,CAACI,SAAZ,KAA0B,WAA9B,EAA2C;MACzC;AACN;AACA;AACA;MACM,KAAKA,SAAL,GAAiBJ,IAAI,CAACI,SAAtB;IACD;EACF;;AA3CgC;;AA8CnCI,MAAM,CAACC,OAAP,GAAiBZ,cAAjB"},"metadata":{},"sourceType":"script"}