{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n\nconst {\n  MembershipStates\n} = require('../util/Constants');\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\n\n\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipState}\n     */\n\n    this.membershipState = MembershipStates[data.membership_state];\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n\n    this.user = this.client.users._add(data.user);\n  }\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n\n\n  get id() {\n    return this.user.id;\n  }\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n\n\n  toString() {\n    return this.user.toString();\n  }\n\n}\n\nmodule.exports = TeamMember;","map":{"version":3,"names":["Base","require","MembershipStates","TeamMember","constructor","team","data","client","_patch","permissions","membershipState","membership_state","user","users","_add","id","toString","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/TeamMember.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\nconst { MembershipStates } = require('../util/Constants');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipState}\n     */\n    this.membershipState = MembershipStates[data.membership_state];\n\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n    this.user = this.client.users._add(data.user);\n  }\n\n  /**\n   * The Team Member's id\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team member's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAM;EAAEC;AAAF,IAAuBD,OAAO,CAAC,mBAAD,CAApC;AAEA;AACA;AACA;AACA;;;AACA,MAAME,UAAN,SAAyBH,IAAzB,CAA8B;EAC5BI,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAa;IACtB,MAAMD,IAAI,CAACE,MAAX;IAEA;AACJ;AACA;AACA;;IACI,KAAKF,IAAL,GAAYA,IAAZ;;IAEA,KAAKG,MAAL,CAAYF,IAAZ;EACD;;EAEDE,MAAM,CAACF,IAAD,EAAO;IACX;AACJ;AACA;AACA;IACI,KAAKG,WAAL,GAAmBH,IAAI,CAACG,WAAxB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,eAAL,GAAuBR,gBAAgB,CAACI,IAAI,CAACK,gBAAN,CAAvC;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAY,KAAKL,MAAL,CAAYM,KAAZ,CAAkBC,IAAlB,CAAuBR,IAAI,CAACM,IAA5B,CAAZ;EACD;EAED;AACF;AACA;AACA;AACA;;;EACQ,IAAFG,EAAE,GAAG;IACP,OAAO,KAAKH,IAAL,CAAUG,EAAjB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,QAAQ,GAAG;IACT,OAAO,KAAKJ,IAAL,CAAUI,QAAV,EAAP;EACD;;AApD2B;;AAuD9BC,MAAM,CAACC,OAAP,GAAiBf,UAAjB"},"metadata":{},"sourceType":"script"}