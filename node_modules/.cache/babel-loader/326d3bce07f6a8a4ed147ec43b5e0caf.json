{"ast":null,"code":"'use strict';\n\nconst {\n  Collection\n} = require('@discordjs/collection');\n\nconst Base = require('./Base');\n\nconst Sticker = require('./Sticker');\n\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\n\n\nclass StickerPack extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIStickerPack} pack The data for the sticker pack\n   */\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n\n    this.id = pack.id;\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n\n    this.name = pack.name;\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n\n    this.skuId = pack.sku_id;\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n\n    this.description = pack.description;\n    /**\n     * The id of the sticker pack's banner image\n     * @type {Snowflake}\n     */\n\n    this.bannerId = pack.banner_asset_id;\n  }\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n\n\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n\n\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n\n\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n\n\n  bannerURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.client.rest.cdn.StickerPackBanner(this.bannerId, format, size);\n  }\n\n}\n\nmodule.exports = StickerPack;\n/**\n * @external APIStickerPack\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-pack-object}\n */","map":{"version":3,"names":["Collection","require","Base","Sticker","SnowflakeUtil","StickerPack","constructor","client","pack","id","stickers","map","s","name","skuId","sku_id","coverStickerId","cover_sticker_id","description","bannerId","banner_asset_id","createdTimestamp","deconstruct","timestamp","createdAt","Date","coverSticker","get","bannerURL","format","size","rest","cdn","StickerPackBanner","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/StickerPack.js"],"sourcesContent":["'use strict';\n\nconst { Collection } = require('@discordjs/collection');\nconst Base = require('./Base');\nconst Sticker = require('./Sticker');\nconst SnowflakeUtil = require('../util/SnowflakeUtil');\n\n/**\n * Represents a pack of standard stickers.\n * @extends {Base}\n */\nclass StickerPack extends Base {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {APIStickerPack} pack The data for the sticker pack\n   */\n  constructor(client, pack) {\n    super(client);\n    /**\n     * The Sticker pack's id\n     * @type {Snowflake}\n     */\n    this.id = pack.id;\n\n    /**\n     * The stickers in the pack\n     * @type {Collection<Snowflake, Sticker>}\n     */\n    this.stickers = new Collection(pack.stickers.map(s => [s.id, new Sticker(client, s)]));\n\n    /**\n     * The name of the sticker pack\n     * @type {string}\n     */\n    this.name = pack.name;\n\n    /**\n     * The id of the pack's SKU\n     * @type {Snowflake}\n     */\n    this.skuId = pack.sku_id;\n\n    /**\n     * The id of a sticker in the pack which is shown as the pack's icon\n     * @type {?Snowflake}\n     */\n    this.coverStickerId = pack.cover_sticker_id ?? null;\n\n    /**\n     * The description of the sticker pack\n     * @type {string}\n     */\n    this.description = pack.description;\n\n    /**\n     * The id of the sticker pack's banner image\n     * @type {Snowflake}\n     */\n    this.bannerId = pack.banner_asset_id;\n  }\n\n  /**\n   * The timestamp the sticker was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the sticker was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * The sticker which is shown as the pack's icon\n   * @type {?Sticker}\n   * @readonly\n   */\n  get coverSticker() {\n    return this.coverStickerId && this.stickers.get(this.coverStickerId);\n  }\n\n  /**\n   * The URL to this sticker pack's banner.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {string}\n   */\n  bannerURL({ format, size } = {}) {\n    return this.client.rest.cdn.StickerPackBanner(this.bannerId, format, size);\n  }\n}\n\nmodule.exports = StickerPack;\n\n/**\n * @external APIStickerPack\n * @see {@link https://discord.com/developers/docs/resources/sticker#sticker-pack-object}\n */\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,uBAAD,CAA9B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,uBAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AACA,MAAMI,WAAN,SAA0BH,IAA1B,CAA+B;EAC7B;AACF;AACA;AACA;EACEI,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;IACxB,MAAMD,MAAN;IACA;AACJ;AACA;AACA;;IACI,KAAKE,EAAL,GAAUD,IAAI,CAACC,EAAf;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgB,IAAIV,UAAJ,CAAeQ,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,CAAC,IAAI,CAACA,CAAC,CAACH,EAAH,EAAO,IAAIN,OAAJ,CAAYI,MAAZ,EAAoBK,CAApB,CAAP,CAAvB,CAAf,CAAhB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYL,IAAI,CAACK,IAAjB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,KAAL,GAAaN,IAAI,CAACO,MAAlB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,cAAL,GAAsBR,IAAI,CAACS,gBAAL,IAAyB,IAA/C;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,WAAL,GAAmBV,IAAI,CAACU,WAAxB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBX,IAAI,CAACY,eAArB;EACD;EAED;AACF;AACA;AACA;AACA;;;EACsB,IAAhBC,gBAAgB,GAAG;IACrB,OAAOjB,aAAa,CAACkB,WAAd,CAA0B,KAAKb,EAA/B,EAAmCc,SAA1C;EACD;EAED;AACF;AACA;AACA;AACA;;;EACe,IAATC,SAAS,GAAG;IACd,OAAO,IAAIC,IAAJ,CAAS,KAAKJ,gBAAd,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACkB,IAAZK,YAAY,GAAG;IACjB,OAAO,KAAKV,cAAL,IAAuB,KAAKN,QAAL,CAAciB,GAAd,CAAkB,KAAKX,cAAvB,CAA9B;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEY,SAAS,GAAwB;IAAA,IAAvB;MAAEC,MAAF;MAAUC;IAAV,CAAuB,uEAAJ,EAAI;IAC/B,OAAO,KAAKvB,MAAL,CAAYwB,IAAZ,CAAiBC,GAAjB,CAAqBC,iBAArB,CAAuC,KAAKd,QAA5C,EAAsDU,MAAtD,EAA8DC,IAA9D,CAAP;EACD;;AApF4B;;AAuF/BI,MAAM,CAACC,OAAP,GAAiB9B,WAAjB;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}