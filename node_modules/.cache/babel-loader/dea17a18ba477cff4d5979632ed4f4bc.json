{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst test_1 = require(\"../test\");\n/**\nTest all the values in the collection against a provided predicate.\n\n@hidden\n@param source Source collection to test.\n@param name The name to call the collection of values, such as `values` or `keys`.\n@param predicate Predicate to test every item in the source collection against.\n*/\n\n\nexports.default = (source, name, predicate) => {\n  try {\n    for (const item of source) {\n      test_1.default(item, name, predicate, false);\n    }\n\n    return true;\n  } catch (error) {\n    return error.message;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","test_1","require","default","source","name","predicate","item","error","message"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/utils/of-type.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst test_1 = require(\"../test\");\n/**\nTest all the values in the collection against a provided predicate.\n\n@hidden\n@param source Source collection to test.\n@param name The name to call the collection of values, such as `values` or `keys`.\n@param predicate Predicate to test every item in the source collection against.\n*/\nexports.default = (source, name, predicate) => {\n    try {\n        for (const item of source) {\n            test_1.default(item, name, predicate, false);\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,OAAO,CAACI,OAAR,GAAkB,CAACC,MAAD,EAASC,IAAT,EAAeC,SAAf,KAA6B;EAC3C,IAAI;IACA,KAAK,MAAMC,IAAX,IAAmBH,MAAnB,EAA2B;MACvBH,MAAM,CAACE,OAAP,CAAeI,IAAf,EAAqBF,IAArB,EAA2BC,SAA3B,EAAsC,KAAtC;IACH;;IACD,OAAO,IAAP;EACH,CALD,CAMA,OAAOE,KAAP,EAAc;IACV,OAAOA,KAAK,CAACC,OAAb;EACH;AACJ,CAVD"},"metadata":{},"sourceType":"script"}