{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nclass ActionsManager {\n  constructor(client) {\n    this.client = client;\n    const files = fs.readdirSync(__dirname);\n\n    for (const file of files) {\n      if (['Action.js', 'ActionsManager.js'].includes(file)) continue;\n      this.register(require(`./${file}`));\n    }\n  }\n\n  register(Action) {\n    this[Action.name.replace(/Action$/, '')] = new Action(this.client);\n  }\n\n}\n\nmodule.exports = ActionsManager;","map":{"version":3,"names":["fs","require","ActionsManager","constructor","client","files","readdirSync","__dirname","file","includes","register","Action","name","replace","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/ActionsManager.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\n\nclass ActionsManager {\n  constructor(client) {\n    this.client = client;\n\n    const files = fs.readdirSync(__dirname);\n\n    for (const file of files) {\n      if (['Action.js', 'ActionsManager.js'].includes(file)) continue;\n      this.register(require(`./${file}`));\n    }\n  }\n\n  register(Action) {\n    this[Action.name.replace(/Action$/, '')] = new Action(this.client);\n  }\n}\n\nmodule.exports = ActionsManager;\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMC,cAAN,CAAqB;EACnBC,WAAW,CAACC,MAAD,EAAS;IAClB,KAAKA,MAAL,GAAcA,MAAd;IAEA,MAAMC,KAAK,GAAGL,EAAE,CAACM,WAAH,CAAeC,SAAf,CAAd;;IAEA,KAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;MACxB,IAAI,CAAC,WAAD,EAAc,mBAAd,EAAmCI,QAAnC,CAA4CD,IAA5C,CAAJ,EAAuD;MACvD,KAAKE,QAAL,CAAcT,OAAO,CAAE,KAAIO,IAAK,EAAX,CAArB;IACD;EACF;;EAEDE,QAAQ,CAACC,MAAD,EAAS;IACf,KAAKA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB,SAApB,EAA+B,EAA/B,CAAL,IAA2C,IAAIF,MAAJ,CAAW,KAAKP,MAAhB,CAA3C;EACD;;AAdkB;;AAiBrBU,MAAM,CAACC,OAAP,GAAiBb,cAAjB"},"metadata":{},"sourceType":"script"}