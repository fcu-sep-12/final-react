{"ast":null,"code":"'use strict';\n\nconst https = require('https');\n\nconst FormData = require('@discordjs/form-data');\n\nconst fetch = require('node-fetch');\n\nconst {\n  UserAgent\n} = require('../util/Constants');\n\nconst agent = new https.Agent({\n  keepAlive: true\n});\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n    const {\n      userAgentSuffix\n    } = this.client.options;\n    this.fullUserAgent = `${UserAgent}${userAgentSuffix.length ? `, ${userAgentSuffix.join(', ')}` : ''}`;\n    let queryString = '';\n\n    if (options.query) {\n      const query = Object.entries(options.query).filter(_ref => {\n        let [, value] = _ref;\n        return value !== null && typeof value !== 'undefined';\n      }).flatMap(_ref2 => {\n        let [key, value] = _ref2;\n        return Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]];\n      });\n      queryString = new URLSearchParams(query).toString();\n    }\n\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API = this.options.versioned === false ? this.client.options.http.api : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n    let headers = { ...this.client.options.http.headers,\n      'User-Agent': this.fullUserAgent\n    };\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n    let body;\n\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n\n      for (const file of this.options.files) {\n        if (file?.file) body.append(file.key ?? file.name, file.file, file.name);\n      }\n\n      if (typeof this.options.data !== 'undefined') {\n        if (this.options.dontUsePayloadJSON) {\n          for (const [key, value] of Object.entries(this.options.data)) body.append(key, value);\n        } else {\n          body.append('payload_json', JSON.stringify(this.options.data));\n        }\n      }\n\n      headers = Object.assign(headers, body.getHeaders()); // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.client.options.restRequestTimeout).unref();\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal\n    }).finally(() => clearTimeout(timeout));\n  }\n\n}\n\nmodule.exports = APIRequest;","map":{"version":3,"names":["https","require","FormData","fetch","UserAgent","agent","Agent","keepAlive","APIRequest","constructor","rest","method","path","options","client","route","retries","userAgentSuffix","fullUserAgent","length","join","queryString","query","Object","entries","filter","value","flatMap","key","Array","isArray","map","v","URLSearchParams","toString","make","API","versioned","http","api","version","url","headers","auth","Authorization","getAuth","reason","encodeURIComponent","assign","body","files","file","append","name","data","dontUsePayloadJSON","JSON","stringify","getHeaders","controller","AbortController","timeout","setTimeout","abort","restRequestTimeout","unref","signal","finally","clearTimeout","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/rest/APIRequest.js"],"sourcesContent":["'use strict';\n\nconst https = require('https');\nconst FormData = require('@discordjs/form-data');\nconst fetch = require('node-fetch');\nconst { UserAgent } = require('../util/Constants');\n\nconst agent = new https.Agent({ keepAlive: true });\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n\n    const { userAgentSuffix } = this.client.options;\n    this.fullUserAgent = `${UserAgent}${userAgentSuffix.length ? `, ${userAgentSuffix.join(', ')}` : ''}`;\n\n    let queryString = '';\n    if (options.query) {\n      const query = Object.entries(options.query)\n        .filter(([, value]) => value !== null && typeof value !== 'undefined')\n        .flatMap(([key, value]) => (Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]));\n      queryString = new URLSearchParams(query).toString();\n    }\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API =\n      this.options.versioned === false\n        ? this.client.options.http.api\n        : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n\n    let headers = {\n      ...this.client.options.http.headers,\n      'User-Agent': this.fullUserAgent,\n    };\n\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n\n    let body;\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n      for (const file of this.options.files) {\n        if (file?.file) body.append(file.key ?? file.name, file.file, file.name);\n      }\n      if (typeof this.options.data !== 'undefined') {\n        if (this.options.dontUsePayloadJSON) {\n          for (const [key, value] of Object.entries(this.options.data)) body.append(key, value);\n        } else {\n          body.append('payload_json', JSON.stringify(this.options.data));\n        }\n      }\n      headers = Object.assign(headers, body.getHeaders());\n      // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = setTimeout(() => controller.abort(), this.client.options.restRequestTimeout).unref();\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal,\n    }).finally(() => clearTimeout(timeout));\n  }\n}\n\nmodule.exports = APIRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}