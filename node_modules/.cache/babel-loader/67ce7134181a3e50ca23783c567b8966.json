{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst Channel = require('../../structures/Channel');\n\nconst {\n  ChannelTypes\n} = require('../../util/Constants');\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    let channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      const old = channel._update(data);\n\n      if (ChannelTypes[channel.type] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel\n      };\n    } else {\n      client.channels._add(data);\n    }\n\n    return {};\n  }\n\n}\n\nmodule.exports = ChannelUpdateAction;","map":{"version":3,"names":["Action","require","Channel","ChannelTypes","ChannelUpdateAction","handle","data","client","channel","channels","cache","get","id","old","_update","type","newChannel","create","guild","message","messages","set","updated","_add","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/ChannelUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Channel = require('../../structures/Channel');\nconst { ChannelTypes } = require('../../util/Constants');\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      const old = channel._update(data);\n\n      if (ChannelTypes[channel.type] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel,\n      };\n    } else {\n      client.channels._add(data);\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = ChannelUpdateAction;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,0BAAD,CAAvB;;AACA,MAAM;EAAEE;AAAF,IAAmBF,OAAO,CAAC,sBAAD,CAAhC;;AAEA,MAAMG,mBAAN,SAAkCJ,MAAlC,CAAyC;EACvCK,MAAM,CAACC,IAAD,EAAO;IACX,MAAMC,MAAM,GAAG,KAAKA,MAApB;IAEA,IAAIC,OAAO,GAAGD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BL,IAAI,CAACM,EAA/B,CAAd;;IACA,IAAIJ,OAAJ,EAAa;MACX,MAAMK,GAAG,GAAGL,OAAO,CAACM,OAAR,CAAgBR,IAAhB,CAAZ;;MAEA,IAAIH,YAAY,CAACK,OAAO,CAACO,IAAT,CAAZ,KAA+BT,IAAI,CAACS,IAAxC,EAA8C;QAC5C,MAAMC,UAAU,GAAGd,OAAO,CAACe,MAAR,CAAe,KAAKV,MAApB,EAA4BD,IAA5B,EAAkCE,OAAO,CAACU,KAA1C,CAAnB;;QACA,KAAK,MAAM,CAACN,EAAD,EAAKO,OAAL,CAAX,IAA4BX,OAAO,CAACY,QAAR,CAAiBV,KAA7C,EAAoDM,UAAU,CAACI,QAAX,CAAoBV,KAApB,CAA0BW,GAA1B,CAA8BT,EAA9B,EAAkCO,OAAlC;;QACpDX,OAAO,GAAGQ,UAAV;QACA,KAAKT,MAAL,CAAYE,QAAZ,CAAqBC,KAArB,CAA2BW,GAA3B,CAA+Bb,OAAO,CAACI,EAAvC,EAA2CJ,OAA3C;MACD;;MAED,OAAO;QACLK,GADK;QAELS,OAAO,EAAEd;MAFJ,CAAP;IAID,CAdD,MAcO;MACLD,MAAM,CAACE,QAAP,CAAgBc,IAAhB,CAAqBjB,IAArB;IACD;;IAED,OAAO,EAAP;EACD;;AAxBsC;;AA2BzCkB,MAAM,CAACC,OAAP,GAAiBrB,mBAAjB"},"metadata":{},"sourceType":"script"}