{"ast":null,"code":"'use strict';\n/**\n * Represents an HTTP error from a request.\n * @extends Error\n */\n\nclass HTTPError extends Error {\n  constructor(message, name, code, request) {\n    super(message);\n    /**\n     * The name of the error\n     * @type {string}\n     */\n\n    this.name = name;\n    /**\n     * HTTP error code returned from the request\n     * @type {number}\n     */\n\n    this.code = code ?? 500;\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n\n    this.method = request.method;\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n\n    this.path = request.path;\n    /**\n     * The HTTP data that was sent to Discord\n     * @typedef {Object} HTTPErrorData\n     * @property {*} json The JSON data that was sent\n     * @property {HTTPAttachmentData[]} files The files that were sent with this request, if any\n     */\n\n    /**\n     * The attachment data that is sent to Discord\n     * @typedef {Object} HTTPAttachmentData\n     * @property {string|Buffer|Stream} attachment The source of this attachment data\n     * @property {string} name The file name\n     * @property {Buffer|Stream} file The file buffer\n     */\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? []\n    };\n  }\n\n}\n\nmodule.exports = HTTPError;","map":{"version":3,"names":["HTTPError","Error","constructor","message","name","code","request","method","path","requestData","json","options","data","files","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/rest/HTTPError.js"],"sourcesContent":["'use strict';\n\n/**\n * Represents an HTTP error from a request.\n * @extends Error\n */\nclass HTTPError extends Error {\n  constructor(message, name, code, request) {\n    super(message);\n\n    /**\n     * The name of the error\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * HTTP error code returned from the request\n     * @type {number}\n     */\n    this.code = code ?? 500;\n\n    /**\n     * The HTTP method used for the request\n     * @type {string}\n     */\n    this.method = request.method;\n\n    /**\n     * The path of the request relative to the HTTP endpoint\n     * @type {string}\n     */\n    this.path = request.path;\n\n    /**\n     * The HTTP data that was sent to Discord\n     * @typedef {Object} HTTPErrorData\n     * @property {*} json The JSON data that was sent\n     * @property {HTTPAttachmentData[]} files The files that were sent with this request, if any\n     */\n\n    /**\n     * The attachment data that is sent to Discord\n     * @typedef {Object} HTTPAttachmentData\n     * @property {string|Buffer|Stream} attachment The source of this attachment data\n     * @property {string} name The file name\n     * @property {Buffer|Stream} file The file buffer\n     */\n\n    /**\n     * The data associated with the request that caused this error\n     * @type {HTTPErrorData}\n     */\n    this.requestData = {\n      json: request.options.data,\n      files: request.options.files ?? [],\n    };\n  }\n}\n\nmodule.exports = HTTPError;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,MAAMA,SAAN,SAAwBC,KAAxB,CAA8B;EAC5BC,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;IACxC,MAAMH,OAAN;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYA,IAAZ;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYA,IAAI,IAAI,GAApB;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,MAAL,GAAcD,OAAO,CAACC,MAAtB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;IAEA;AACJ;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;;IACI,KAAKC,WAAL,GAAmB;MACjBC,IAAI,EAAEJ,OAAO,CAACK,OAAR,CAAgBC,IADL;MAEjBC,KAAK,EAAEP,OAAO,CAACK,OAAR,CAAgBE,KAAhB,IAAyB;IAFf,CAAnB;EAID;;AAnD2B;;AAsD9BC,MAAM,CAACC,OAAP,GAAiBf,SAAjB"},"metadata":{},"sourceType":"script"}