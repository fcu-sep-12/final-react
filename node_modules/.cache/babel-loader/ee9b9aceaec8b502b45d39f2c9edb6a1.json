{"ast":null,"code":"'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n/**\n * Represents a guild store channel on Discord.\n * @extends {GuildChannel}\n */\n\n\nclass StoreChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the store channel is part of\n   * @param {APIChannel} data The data for the store channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client);\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n\n    this.nsfw = Boolean(data.nsfw);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n  }\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n\n\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n\n\n  fetchInvites() {\n    let cache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.guild.invites.fetch({\n      channelId: this.id,\n      cache\n    });\n  }\n\n}\n\nmodule.exports = StoreChannel;","map":{"version":3,"names":["GuildChannel","require","StoreChannel","constructor","guild","data","client","nsfw","Boolean","_patch","createInvite","options","invites","create","id","fetchInvites","cache","fetch","channelId","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/StoreChannel.js"],"sourcesContent":["'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n\n/**\n * Represents a guild store channel on Discord.\n * @extends {GuildChannel}\n */\nclass StoreChannel extends GuildChannel {\n  /**\n   * @param {Guild} guild The guild the store channel is part of\n   * @param {APIChannel} data The data for the store channel\n   * @param {Client} [client] A safety parameter for the client that instantiated this\n   */\n  constructor(guild, data, client) {\n    super(guild, data, client);\n\n    /**\n     * If the guild considers this channel NSFW\n     * @type {boolean}\n     */\n    this.nsfw = Boolean(data.nsfw);\n  }\n\n  _patch(data) {\n    super._patch(data);\n\n    if ('nsfw' in data) {\n      this.nsfw = Boolean(data.nsfw);\n    }\n  }\n\n  /**\n   * Creates an invite to this guild channel.\n   * @param {CreateInviteOptions} [options={}] The options for creating the invite\n   * @returns {Promise<Invite>}\n   * @example\n   * // Create an invite to a channel\n   * channel.createInvite()\n   *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n   *   .catch(console.error);\n   */\n  createInvite(options) {\n    return this.guild.invites.create(this.id, options);\n  }\n\n  /**\n   * Fetches a collection of invites to this guild channel.\n   * Resolves with a collection mapping invites by their codes.\n   * @param {boolean} [cache=true] Whether or not to cache the fetched invites\n   * @returns {Promise<Collection<string, Invite>>}\n   */\n  fetchInvites(cache = true) {\n    return this.guild.invites.fetch({ channelId: this.id, cache });\n  }\n}\n\nmodule.exports = StoreChannel;\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,YAAN,SAA2BF,YAA3B,CAAwC;EACtC;AACF;AACA;AACA;AACA;EACEG,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAcC,MAAd,EAAsB;IAC/B,MAAMF,KAAN,EAAaC,IAAb,EAAmBC,MAAnB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYC,OAAO,CAACH,IAAI,CAACE,IAAN,CAAnB;EACD;;EAEDE,MAAM,CAACJ,IAAD,EAAO;IACX,MAAMI,MAAN,CAAaJ,IAAb;;IAEA,IAAI,UAAUA,IAAd,EAAoB;MAClB,KAAKE,IAAL,GAAYC,OAAO,CAACH,IAAI,CAACE,IAAN,CAAnB;IACD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEG,YAAY,CAACC,OAAD,EAAU;IACpB,OAAO,KAAKP,KAAL,CAAWQ,OAAX,CAAmBC,MAAnB,CAA0B,KAAKC,EAA/B,EAAmCH,OAAnC,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEI,YAAY,GAAe;IAAA,IAAdC,KAAc,uEAAN,IAAM;IACzB,OAAO,KAAKZ,KAAL,CAAWQ,OAAX,CAAmBK,KAAnB,CAAyB;MAAEC,SAAS,EAAE,KAAKJ,EAAlB;MAAsBE;IAAtB,CAAzB,CAAP;EACD;;AA9CqC;;AAiDxCG,MAAM,CAACC,OAAP,GAAiBlB,YAAjB"},"metadata":{},"sourceType":"script"}