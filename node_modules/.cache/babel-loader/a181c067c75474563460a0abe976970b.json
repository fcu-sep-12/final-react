{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormattingPatterns = void 0;\n/**\r\n * https://discord.com/developers/docs/reference#message-formatting-formats\r\n */\n\nexports.FormattingPatterns = {\n  /**\r\n   * Regular expression for matching a user mention, strictly without a nickname\r\n   *\r\n   * The `id` group property is present on the `exec` result of this expression\r\n   */\n  User: /<@(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a user mention, strictly with a nickname\r\n   *\r\n   * The `id` group property is present on the `exec` result of this expression\r\n   */\n  UserWithNickname: /<@!(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a user mention, with or without a nickname\r\n   *\r\n   * The `id` group property is present on the `exec` result of this expression\r\n   */\n  UserWithOptionalNickname: /<@!?(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a channel mention\r\n   *\r\n   * The `id` group property is present on the `exec` result of this expression\r\n   */\n  Channel: /<#(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a role mention\r\n   *\r\n   * The `id` group property is present on the `exec` result of this expression\r\n   */\n  Role: /<@&(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a custom emoji, either static or animated\r\n   *\r\n   * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n   */\n  Emoji: /<(?<animated>a)?:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching strictly an animated custom emoji\r\n   *\r\n   * The `animated`, `name` and `id` group properties are present on the `exec` result of this expression\r\n   */\n  AnimatedEmoji: /<(?<animated>a):(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching strictly a static custom emoji\r\n   *\r\n   * The `name` and `id` group properties are present on the `exec` result of this expression\r\n   */\n  StaticEmoji: /<:(?<name>\\w{2,32}):(?<id>\\d{17,20})>/,\n\n  /**\r\n   * Regular expression for matching a timestamp, either default or custom styled\r\n   *\r\n   * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n   */\n  Timestamp: /<t:(?<timestamp>-?\\d{1,13})(:(?<style>[tTdDfFR]))?>/,\n\n  /**\r\n   * Regular expression for matching strictly default styled timestamps\r\n   *\r\n   * The `timestamp` group property is present on the `exec` result of this expression\r\n   */\n  DefaultStyledTimestamp: /<t:(?<timestamp>-?\\d{1,13})>/,\n\n  /**\r\n   * Regular expression for matching strictly custom styled timestamps\r\n   *\r\n   * The `timestamp` and `style` group properties are present on the `exec` result of this expression\r\n   */\n  StyledTimestamp: /<t:(?<timestamp>-?\\d{1,13}):(?<style>[tTdDfFR])>/\n};\n/**\r\n * Freezes the formatting patterns\r\n * @internal\r\n */\n\nObject.freeze(exports.FormattingPatterns);","map":{"version":3,"mappings":";;;;;;AAWA;;;;AAGaA,6BAAqB;EACjC;;;;;EAKAC,IAAI,EAAE,qBAN2B;;EAOjC;;;;;EAKAC,gBAAgB,EAAE,sBAZe;;EAajC;;;;;EAKAC,wBAAwB,EAAE,uBAlBO;;EAmBjC;;;;;EAKAC,OAAO,EAAE,qBAxBwB;;EAyBjC;;;;;EAKAC,IAAI,EAAE,sBA9B2B;;EA+BjC;;;;;EAKAC,KAAK,EAAE,sDApC0B;;EAqCjC;;;;;EAKAC,aAAa,EAAE,qDA1CkB;;EA2CjC;;;;;EAKAC,WAAW,EAAE,uCAhDoB;;EAiDjC;;;;;EAKAC,SAAS,EAAE,qDAtDsB;;EAuDjC;;;;;EAKAC,sBAAsB,EAAE,8BA5DS;;EA6DjC;;;;;EAKAC,eAAe,EAAE;AAlEgB,CAArB;AAqEb;;;;;AAIAC,MAAM,CAACC,MAAP,CAAcb,0BAAd","names":["exports","User","UserWithNickname","UserWithOptionalNickname","Channel","Role","Emoji","AnimatedEmoji","StaticEmoji","Timestamp","DefaultStyledTimestamp","StyledTimestamp","Object","freeze"],"sources":["globals.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}