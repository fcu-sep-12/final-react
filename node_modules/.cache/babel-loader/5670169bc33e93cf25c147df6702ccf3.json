{"ast":null,"code":"'use strict';\n\nconst Util = require('../util/Util');\n/**\n * Represents an attachment in a message.\n */\n\n\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {APIAttachment} [data] Extra data\n   */\n  constructor(attachment) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 ? arguments[2] : undefined;\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n\n    this.name = name;\n    if (data) this._patch(data);\n  }\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n\n\n  setFile(attachment) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n\n\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  _patch(data) {\n    /**\n     * The attachment's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n\n    this.size = data.size;\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n\n    this.url = data.url;\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n\n    this.proxyURL = data.proxy_url;\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n\n    this.height = data.height ?? null;\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n\n    this.width = data.width ?? null;\n    /**\n     * This media type of this attachment\n     * @type {?string}\n     */\n\n    this.contentType = data.content_type ?? null;\n  }\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n\n\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n\n}\n\nmodule.exports = MessageAttachment;\n/**\n * @external APIAttachment\n * @see {@link https://discord.com/developers/docs/resources/channel#attachment-object}\n */","map":{"version":3,"names":["Util","require","MessageAttachment","constructor","attachment","name","data","_patch","setFile","setName","id","size","url","proxyURL","proxy_url","height","width","contentType","content_type","spoiler","basename","startsWith","toJSON","flatten","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/MessageAttachment.js"],"sourcesContent":["'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents an attachment in a message.\n */\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {APIAttachment} [data] Extra data\n   */\n  constructor(attachment, name = null, data) {\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = name;\n    if (data) this._patch(data);\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n  setFile(attachment, name = null) {\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  _patch(data) {\n    /**\n     * The attachment's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n    this.size = data.size;\n\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n    this.url = data.url;\n\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n    this.proxyURL = data.proxy_url;\n\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.height = data.height ?? null;\n\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.width = data.width ?? null;\n\n    /**\n     * This media type of this attachment\n     * @type {?string}\n     */\n    this.contentType = data.content_type ?? null;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = MessageAttachment;\n\n/**\n * @external APIAttachment\n * @see {@link https://discord.com/developers/docs/resources/channel#attachment-object}\n */\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,cAAD,CAApB;AAEA;AACA;AACA;;;AACA,MAAMC,iBAAN,CAAwB;EACtB;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACC,UAAD,EAAgC;IAAA,IAAnBC,IAAmB,uEAAZ,IAAY;IAAA,IAANC,IAAM;IACzC,KAAKF,UAAL,GAAkBA,UAAlB;IACA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYA,IAAZ;IACA,IAAIC,IAAJ,EAAU,KAAKC,MAAL,CAAYD,IAAZ;EACX;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEE,OAAO,CAACJ,UAAD,EAA0B;IAAA,IAAbC,IAAa,uEAAN,IAAM;IAC/B,KAAKD,UAAL,GAAkBA,UAAlB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,OAAO,IAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEI,OAAO,CAACJ,IAAD,EAAO;IACZ,KAAKA,IAAL,GAAYA,IAAZ;IACA,OAAO,IAAP;EACD;;EAEDE,MAAM,CAACD,IAAD,EAAO;IACX;AACJ;AACA;AACA;IACI,KAAKI,EAAL,GAAUJ,IAAI,CAACI,EAAf;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYL,IAAI,CAACK,IAAjB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,GAAL,GAAWN,IAAI,CAACM,GAAhB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBP,IAAI,CAACQ,SAArB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,MAAL,GAAcT,IAAI,CAACS,MAAL,IAAe,IAA7B;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,KAAL,GAAaV,IAAI,CAACU,KAAL,IAAc,IAA3B;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,WAAL,GAAmBX,IAAI,CAACY,YAAL,IAAqB,IAAxC;EACD;EAED;AACF;AACA;AACA;AACA;;;EACa,IAAPC,OAAO,GAAG;IACZ,OAAOnB,IAAI,CAACoB,QAAL,CAAc,KAAKR,GAAnB,EAAwBS,UAAxB,CAAmC,UAAnC,CAAP;EACD;;EAEDC,MAAM,GAAG;IACP,OAAOtB,IAAI,CAACuB,OAAL,CAAa,IAAb,CAAP;EACD;;AA7FqB;;AAgGxBC,MAAM,CAACC,OAAP,GAAiBvB,iBAAjB;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}