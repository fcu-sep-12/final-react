{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\n/**\n * Represents a WidgetMember.\n */\n\n\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n\n    this.id = data.id;\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n\n    this.username = data.username;\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n\n    this.discriminator = data.discriminator;\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n\n    this.avatar = data.avatar;\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n\n    this.status = data.status;\n    /**\n     * IIf the member is server deafened\n     * @type {?boolean}\n     */\n\n    this.deaf = data.deaf ?? null;\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n\n    this.mute = data.mute ?? null;\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n\n    this.selfDeaf = data.self_deaf ?? null;\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n\n    this.selfMute = data.self_mute ?? null;\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n\n    this.suppress = data.suppress ?? null;\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n\n    this.channelId = data.channel_id ?? null;\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n\n    this.avatarURL = data.avatar_url;\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n\n    this.activity = data.activity ?? null;\n  }\n\n}\n\nmodule.exports = WidgetMember;","map":{"version":3,"names":["Base","require","WidgetMember","constructor","client","data","id","username","discriminator","avatar","status","deaf","mute","selfDeaf","self_deaf","selfMute","self_mute","suppress","channelId","channel_id","avatarURL","avatar_url","activity","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/WidgetMember.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\n\n/**\n * Represents a WidgetMember.\n */\nclass WidgetMember extends Base {\n  /**\n   * Activity sent in a {@link WidgetMember}.\n   * @typedef {Object} WidgetActivity\n   * @property {string} name The name of the activity\n   */\n\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} data The raw data\n   */\n  constructor(client, data) {\n    super(client);\n\n    /**\n     * The id of the user. It's an arbitrary number.\n     * @type {string}\n     */\n    this.id = data.id;\n\n    /**\n     * The username of the member.\n     * @type {string}\n     */\n    this.username = data.username;\n\n    /**\n     * The discriminator of the member.\n     * @type {string}\n     */\n    this.discriminator = data.discriminator;\n\n    /**\n     * The avatar of the member.\n     * @type {?string}\n     */\n    this.avatar = data.avatar;\n\n    /**\n     * The status of the member.\n     * @type {PresenceStatus}\n     */\n    this.status = data.status;\n\n    /**\n     * IIf the member is server deafened\n     * @type {?boolean}\n     */\n    this.deaf = data.deaf ?? null;\n\n    /**\n     * If the member is server muted\n     * @type {?boolean}\n     */\n    this.mute = data.mute ?? null;\n\n    /**\n     * If the member is self deafened\n     * @type {?boolean}\n     */\n    this.selfDeaf = data.self_deaf ?? null;\n\n    /**\n     * If the member is self muted\n     * @type {?boolean}\n     */\n    this.selfMute = data.self_mute ?? null;\n\n    /**\n     * If the member is suppressed\n     * @type {?boolean}\n     */\n    this.suppress = data.suppress ?? null;\n\n    /**\n     * The id of the voice channel the member is in, if any\n     * @type {?Snowflake}\n     */\n    this.channelId = data.channel_id ?? null;\n\n    /**\n     * The avatar URL of the member.\n     * @type {string}\n     */\n    this.avatarURL = data.avatar_url;\n\n    /**\n     * The activity of the member.\n     * @type {?WidgetActivity}\n     */\n    this.activity = data.activity ?? null;\n  }\n}\n\nmodule.exports = WidgetMember;\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;;;AACA,MAAMC,YAAN,SAA2BF,IAA3B,CAAgC;EAC9B;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;EACEG,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;IACxB,MAAMD,MAAN;IAEA;AACJ;AACA;AACA;;IACI,KAAKE,EAAL,GAAUD,IAAI,CAACC,EAAf;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBF,IAAI,CAACE,QAArB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,aAAL,GAAqBH,IAAI,CAACG,aAA1B;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,MAAL,GAAcJ,IAAI,CAACI,MAAnB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,MAAL,GAAcL,IAAI,CAACK,MAAnB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYN,IAAI,CAACM,IAAL,IAAa,IAAzB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,IAAL,GAAYP,IAAI,CAACO,IAAL,IAAa,IAAzB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBR,IAAI,CAACS,SAAL,IAAkB,IAAlC;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBV,IAAI,CAACW,SAAL,IAAkB,IAAlC;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBZ,IAAI,CAACY,QAAL,IAAiB,IAAjC;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,SAAL,GAAiBb,IAAI,CAACc,UAAL,IAAmB,IAApC;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,SAAL,GAAiBf,IAAI,CAACgB,UAAtB;IAEA;AACJ;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBjB,IAAI,CAACiB,QAAL,IAAiB,IAAjC;EACD;;AA3F6B;;AA8FhCC,MAAM,CAACC,OAAP,GAAiBtB,YAAjB"},"metadata":{},"sourceType":"script"}