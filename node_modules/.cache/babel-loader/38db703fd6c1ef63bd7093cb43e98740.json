{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeakSetPredicate = void 0;\n\nconst has_items_1 = require(\"../utils/has-items\");\n\nconst predicate_1 = require(\"./predicate\");\n\nclass WeakSetPredicate extends predicate_1.Predicate {\n  /**\n  @hidden\n  */\n  constructor(options) {\n    super('WeakSet', options);\n  }\n  /**\n  Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n   @param items - The items that should be a item in the WeakSet.\n  */\n\n\n  has() {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n\n    return this.addValidator({\n      message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n      validator: set => has_items_1.default(set, items)\n    });\n  }\n  /**\n  Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n   @param items - The items that could be a item in the WeakSet.\n  */\n\n\n  hasAny() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    return this.addValidator({\n      message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n      validator: set => items.some(item => set.has(item))\n    });\n  }\n\n}\n\nexports.WeakSetPredicate = WeakSetPredicate;","map":{"version":3,"names":["Object","defineProperty","exports","value","WeakSetPredicate","has_items_1","require","predicate_1","Predicate","constructor","options","has","items","addValidator","message","_","label","missingItems","JSON","stringify","validator","set","default","hasAny","some","item"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/predicates/weak-set.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakSetPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakSetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakSet', options);\n    }\n    /**\n    Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the WeakSet.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the WeakSet.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n}\nexports.WeakSetPredicate = WeakSetPredicate;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMF,gBAAN,SAA+BG,WAAW,CAACC,SAA3C,CAAqD;EACjD;AACJ;AACA;EACIC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAM,SAAN,EAAiBA,OAAjB;EACH;EACD;AACJ;AACA;AACA;;;EAEIC,GAAG,GAAW;IAAA,kCAAPC,KAAO;MAAPA,KAAO;IAAA;;IACV,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACC,CAAD,EAAIC,KAAJ,EAAWC,YAAX,KAA6B,YAAWD,KAAM,oBAAmBE,IAAI,CAACC,SAAL,CAAeF,YAAf,CAA6B,IADlF;MAErBG,SAAS,EAAEC,GAAG,IAAIhB,WAAW,CAACiB,OAAZ,CAAoBD,GAApB,EAAyBT,KAAzB;IAFG,CAAlB,CAAP;EAIH;EACD;AACJ;AACA;AACA;;;EAEIW,MAAM,GAAW;IAAA,mCAAPX,KAAO;MAAPA,KAAO;IAAA;;IACb,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACC,CAAD,EAAIC,KAAJ,KAAe,YAAWA,KAAM,0BAAyBE,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAsB,IADnE;MAErBQ,SAAS,EAAEC,GAAG,IAAIT,KAAK,CAACY,IAAN,CAAWC,IAAI,IAAIJ,GAAG,CAACV,GAAJ,CAAQc,IAAR,CAAnB;IAFG,CAAlB,CAAP;EAIH;;AA5BgD;;AA8BrDvB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}