{"ast":null,"code":"'use strict';\n\nconst {\n  ClientApplicationAssetTypes,\n  Endpoints\n} = require('../../util/Constants');\n\nconst SnowflakeUtil = require('../../util/SnowflakeUtil');\n\nconst Base = require('../Base');\n\nconst AssetTypes = Object.keys(ClientApplicationAssetTypes);\n/**\n * Represents an OAuth2 Application.\n * @abstract\n */\n\nclass Application extends Base {\n  constructor(client, data) {\n    super(client);\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n    /**\n     * The name of the application\n     * @type {?string}\n     */\n\n    this.name = data.name ?? this.name ?? null;\n    /**\n     * The application's description\n     * @type {?string}\n     */\n\n    this.description = data.description ?? this.description ?? null;\n    /**\n     * The application's icon hash\n     * @type {?string}\n     */\n\n    this.icon = data.icon ?? this.icon ?? null;\n  }\n  /**\n   * The timestamp the application was created at\n   * @type {number}\n   * @readonly\n   */\n\n\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n  /**\n   * The time the application was created at\n   * @type {Date}\n   * @readonly\n   */\n\n\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n  /**\n   * A link to the application's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n\n\n  iconURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.icon) return null;\n    return this.client.rest.cdn.AppIcon(this.id, this.icon, {\n      format,\n      size\n    });\n  }\n  /**\n   * A link to this application's cover image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n\n\n  coverURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.cover) return null;\n    return Endpoints.CDN(this.client.options.http.cdn).AppIcon(this.id, this.cover, {\n      format,\n      size\n    });\n  }\n  /**\n   * Asset data.\n   * @typedef {Object} ApplicationAsset\n   * @property {Snowflake} id The asset's id\n   * @property {string} name The asset's name\n   * @property {string} type The asset's type\n   */\n\n  /**\n   * Gets the application's rich presence assets.\n   * @returns {Promise<Array<ApplicationAsset>>}\n   */\n\n\n  async fetchAssets() {\n    const assets = await this.client.api.oauth2.applications(this.id).assets.get();\n    return assets.map(a => ({\n      id: a.id,\n      name: a.name,\n      type: AssetTypes[a.type - 1]\n    }));\n  }\n  /**\n   * When concatenated with a string, this automatically returns the application's name instead of the\n   * Oauth2Application object.\n   * @returns {?string}\n   * @example\n   * // Logs: Application name: My App\n   * console.log(`Application name: ${application}`);\n   */\n\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      createdTimestamp: true\n    });\n  }\n\n}\n\nmodule.exports = Application;","map":{"version":3,"names":["ClientApplicationAssetTypes","Endpoints","require","SnowflakeUtil","Base","AssetTypes","Object","keys","Application","constructor","client","data","_patch","id","name","description","icon","createdTimestamp","deconstruct","timestamp","createdAt","Date","iconURL","format","size","rest","cdn","AppIcon","coverURL","cover","CDN","options","http","fetchAssets","assets","api","oauth2","applications","get","map","a","type","toString","toJSON","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/structures/interfaces/Application.js"],"sourcesContent":["'use strict';\n\nconst { ClientApplicationAssetTypes, Endpoints } = require('../../util/Constants');\nconst SnowflakeUtil = require('../../util/SnowflakeUtil');\nconst Base = require('../Base');\n\nconst AssetTypes = Object.keys(ClientApplicationAssetTypes);\n\n/**\n * Represents an OAuth2 Application.\n * @abstract\n */\nclass Application extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The application's id\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the application\n     * @type {?string}\n     */\n    this.name = data.name ?? this.name ?? null;\n\n    /**\n     * The application's description\n     * @type {?string}\n     */\n    this.description = data.description ?? this.description ?? null;\n\n    /**\n     * The application's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon ?? this.icon ?? null;\n  }\n\n  /**\n   * The timestamp the application was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return SnowflakeUtil.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the application was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the application's icon.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.AppIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * A link to this application's cover image.\n   * @param {StaticImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string}\n   */\n  coverURL({ format, size } = {}) {\n    if (!this.cover) return null;\n    return Endpoints.CDN(this.client.options.http.cdn).AppIcon(this.id, this.cover, { format, size });\n  }\n\n  /**\n   * Asset data.\n   * @typedef {Object} ApplicationAsset\n   * @property {Snowflake} id The asset's id\n   * @property {string} name The asset's name\n   * @property {string} type The asset's type\n   */\n\n  /**\n   * Gets the application's rich presence assets.\n   * @returns {Promise<Array<ApplicationAsset>>}\n   */\n  async fetchAssets() {\n    const assets = await this.client.api.oauth2.applications(this.id).assets.get();\n    return assets.map(a => ({\n      id: a.id,\n      name: a.name,\n      type: AssetTypes[a.type - 1],\n    }));\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the application's name instead of the\n   * Oauth2Application object.\n   * @returns {?string}\n   * @example\n   * // Logs: Application name: My App\n   * console.log(`Application name: ${application}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Application;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}