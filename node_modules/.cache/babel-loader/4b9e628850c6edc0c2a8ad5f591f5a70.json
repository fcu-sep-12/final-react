{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst Typing = require('../../structures/Typing');\n\nconst {\n  Events,\n  TextBasedChannelTypes\n} = require('../../util/Constants');\n\nclass TypingStart extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n\n    if (!channel) {\n      return;\n    }\n\n    if (!TextBasedChannelTypes.includes(channel.type)) {\n      this.client.emit(Events.WARN, `Discord sent a typing packet to a ${channel.type} channel ${channel.id}`);\n      return;\n    }\n\n    const user = this.getUserFromMember(data);\n\n    if (channel && user) {\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Typing} typing The typing state\n       */\n      this.client.emit(Events.TYPING_START, new Typing(channel, user, data));\n    }\n  }\n\n}\n\nmodule.exports = TypingStart;","map":{"version":3,"names":["Action","require","Typing","Events","TextBasedChannelTypes","TypingStart","handle","data","channel","getChannel","includes","type","client","emit","WARN","id","user","getUserFromMember","TYPING_START","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/TypingStart.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Typing = require('../../structures/Typing');\nconst { Events, TextBasedChannelTypes } = require('../../util/Constants');\n\nclass TypingStart extends Action {\n  handle(data) {\n    const channel = this.getChannel(data);\n    if (!channel) {\n      return;\n    }\n    if (!TextBasedChannelTypes.includes(channel.type)) {\n      this.client.emit(Events.WARN, `Discord sent a typing packet to a ${channel.type} channel ${channel.id}`);\n      return;\n    }\n\n    const user = this.getUserFromMember(data);\n    if (channel && user) {\n      /**\n       * Emitted whenever a user starts typing in a channel.\n       * @event Client#typingStart\n       * @param {Typing} typing The typing state\n       */\n      this.client.emit(Events.TYPING_START, new Typing(channel, user, data));\n    }\n  }\n}\n\nmodule.exports = TypingStart;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAtB;;AACA,MAAM;EAAEE,MAAF;EAAUC;AAAV,IAAoCH,OAAO,CAAC,sBAAD,CAAjD;;AAEA,MAAMI,WAAN,SAA0BL,MAA1B,CAAiC;EAC/BM,MAAM,CAACC,IAAD,EAAO;IACX,MAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBF,IAAhB,CAAhB;;IACA,IAAI,CAACC,OAAL,EAAc;MACZ;IACD;;IACD,IAAI,CAACJ,qBAAqB,CAACM,QAAtB,CAA+BF,OAAO,CAACG,IAAvC,CAAL,EAAmD;MACjD,KAAKC,MAAL,CAAYC,IAAZ,CAAiBV,MAAM,CAACW,IAAxB,EAA+B,qCAAoCN,OAAO,CAACG,IAAK,YAAWH,OAAO,CAACO,EAAG,EAAtG;MACA;IACD;;IAED,MAAMC,IAAI,GAAG,KAAKC,iBAAL,CAAuBV,IAAvB,CAAb;;IACA,IAAIC,OAAO,IAAIQ,IAAf,EAAqB;MACnB;AACN;AACA;AACA;AACA;MACM,KAAKJ,MAAL,CAAYC,IAAZ,CAAiBV,MAAM,CAACe,YAAxB,EAAsC,IAAIhB,MAAJ,CAAWM,OAAX,EAAoBQ,IAApB,EAA0BT,IAA1B,CAAtC;IACD;EACF;;AApB8B;;AAuBjCY,MAAM,CAACC,OAAP,GAAiBf,WAAjB"},"metadata":{},"sourceType":"script"}