{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataViewPredicate = void 0;\n\nconst predicate_1 = require(\"./predicate\");\n\nclass DataViewPredicate extends predicate_1.Predicate {\n  /**\n  @hidden\n  */\n  constructor(options) {\n    super('DataView', options);\n  }\n  /**\n  Test a DataView to have a specific byte length.\n   @param byteLength - The byte length of the DataView.\n  */\n\n\n  byteLength(byteLength) {\n    return this.addValidator({\n      message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n      validator: value => value.byteLength === byteLength\n    });\n  }\n  /**\n  Test a DataView to have a minimum byte length.\n   @param byteLength - The minimum byte length of the DataView.\n  */\n\n\n  minByteLength(byteLength) {\n    return this.addValidator({\n      message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n      validator: value => value.byteLength >= byteLength,\n      negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n    });\n  }\n  /**\n  Test a DataView to have a minimum byte length.\n   @param length - The minimum byte length of the DataView.\n  */\n\n\n  maxByteLength(byteLength) {\n    return this.addValidator({\n      message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n      validator: value => value.byteLength <= byteLength,\n      negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n    });\n  }\n\n}\n\nexports.DataViewPredicate = DataViewPredicate;","map":{"version":3,"names":["Object","defineProperty","exports","value","DataViewPredicate","predicate_1","require","Predicate","constructor","options","byteLength","addValidator","message","label","validator","minByteLength","negatedMessage","maxByteLength"],"sources":["C:/Users/ROUSER6/node_modules/ow/dist/predicates/data-view.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataViewPredicate = void 0;\nconst predicate_1 = require(\"./predicate\");\nclass DataViewPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('DataView', options);\n    }\n    /**\n    Test a DataView to have a specific byte length.\n\n    @param byteLength - The byte length of the DataView.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the DataView.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param length - The minimum byte length of the DataView.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.DataViewPredicate = DataViewPredicate;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMF,iBAAN,SAAgCC,WAAW,CAACE,SAA5C,CAAsD;EAClD;AACJ;AACA;EACIC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAM,UAAN,EAAkBA,OAAlB;EACH;EACD;AACJ;AACA;AACA;;;EAEIC,UAAU,CAACA,UAAD,EAAa;IACnB,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACT,KAAD,EAAQU,KAAR,KAAmB,YAAWA,KAAM,6BAA4BH,UAAW,aAAYP,KAAK,CAACO,UAAW,IAD5F;MAErBI,SAAS,EAAEX,KAAK,IAAIA,KAAK,CAACO,UAAN,KAAqBA;IAFpB,CAAlB,CAAP;EAIH;EACD;AACJ;AACA;AACA;;;EAEIK,aAAa,CAACL,UAAD,EAAa;IACtB,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACT,KAAD,EAAQU,KAAR,KAAmB,YAAWA,KAAM,uCAAsCH,UAAW,aAAYP,KAAK,CAACO,UAAW,IADtG;MAErBI,SAAS,EAAEX,KAAK,IAAIA,KAAK,CAACO,UAAN,IAAoBA,UAFnB;MAGrBM,cAAc,EAAE,CAACb,KAAD,EAAQU,KAAR,KAAmB,YAAWA,KAAM,uCAAsCH,UAAU,GAAG,CAAE,aAAYP,KAAK,CAACO,UAAW;IAHjH,CAAlB,CAAP;EAKH;EACD;AACJ;AACA;AACA;;;EAEIO,aAAa,CAACP,UAAD,EAAa;IACtB,OAAO,KAAKC,YAAL,CAAkB;MACrBC,OAAO,EAAE,CAACT,KAAD,EAAQU,KAAR,KAAmB,YAAWA,KAAM,uCAAsCH,UAAW,aAAYP,KAAK,CAACO,UAAW,IADtG;MAErBI,SAAS,EAAEX,KAAK,IAAIA,KAAK,CAACO,UAAN,IAAoBA,UAFnB;MAGrBM,cAAc,EAAE,CAACb,KAAD,EAAQU,KAAR,KAAmB,YAAWA,KAAM,uCAAsCH,UAAU,GAAG,CAAE,aAAYP,KAAK,CAACO,UAAW;IAHjH,CAAlB,CAAP;EAKH;;AAzCiD;;AA2CtDR,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}