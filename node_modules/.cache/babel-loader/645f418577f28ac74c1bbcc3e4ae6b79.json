{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass GuildStickerUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom sticker is updated in a guild.\n     * @event Client#stickerUpdate\n     * @param {Sticker} oldSticker The old sticker\n     * @param {Sticker} newSticker The new sticker\n     */\n\n\n    this.client.emit(Events.GUILD_STICKER_UPDATE, old, current);\n    return {\n      sticker: current\n    };\n  }\n\n}\n\nmodule.exports = GuildStickerUpdateAction;","map":{"version":3,"names":["Action","require","Events","GuildStickerUpdateAction","handle","current","data","old","_update","client","emit","GUILD_STICKER_UPDATE","sticker","module","exports"],"sources":["C:/Users/ROUSER6/node_modules/discord.js/src/client/actions/GuildStickerUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildStickerUpdateAction extends Action {\n  handle(current, data) {\n    const old = current._update(data);\n    /**\n     * Emitted whenever a custom sticker is updated in a guild.\n     * @event Client#stickerUpdate\n     * @param {Sticker} oldSticker The old sticker\n     * @param {Sticker} newSticker The new sticker\n     */\n    this.client.emit(Events.GUILD_STICKER_UPDATE, old, current);\n    return { sticker: current };\n  }\n}\n\nmodule.exports = GuildStickerUpdateAction;\n"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;EAAEC;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,wBAAN,SAAuCH,MAAvC,CAA8C;EAC5CI,MAAM,CAACC,OAAD,EAAUC,IAAV,EAAgB;IACpB,MAAMC,GAAG,GAAGF,OAAO,CAACG,OAAR,CAAgBF,IAAhB,CAAZ;IACA;AACJ;AACA;AACA;AACA;AACA;;;IACI,KAAKG,MAAL,CAAYC,IAAZ,CAAiBR,MAAM,CAACS,oBAAxB,EAA8CJ,GAA9C,EAAmDF,OAAnD;IACA,OAAO;MAAEO,OAAO,EAAEP;IAAX,CAAP;EACD;;AAX2C;;AAc9CQ,MAAM,CAACC,OAAP,GAAiBX,wBAAjB"},"metadata":{},"sourceType":"script"}